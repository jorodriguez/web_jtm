{"version":3,"sources":["webpack:///../../../src/components/VGrid/VSpacer.ts","webpack:///../../src/util/dateTimeUtils.ts","webpack:///../../../src/components/VBtn/index.ts","webpack:///../../../src/mixins/localable/index.ts","webpack:///../../../../src/components/VCalendar/util/timestamp.ts"],"names":["createSimpleFunctional","createUTCDate","year","month","day","date","Date","UTC","isFinite","getUTCFullYear","setUTCFullYear","firstWeekOffset","firstDayOfWeek","firstDayOfYear","firstWeekDayInFirstWeek","firstWeekDayOfYear","getUTCDay","dayOfYear","isLeapYear","weeksInYear","weekOffset","weekOffsetNext","daysInYear","weekNumber","localeFirstDayOfYear","week","Math","ceil","VBtn","Vue","extend","name","props","locale","String","computed","currentLocale","this","$vuetify","lang","current","PARSE_REGEX","PARSE_TIME","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP","DAYS_IN_MONTH_MIN","DAYS_IN_MONTH_MAX","MONTH_MAX","MONTH_MIN","DAY_MIN","DAYS_IN_WEEK","MINUTES_IN_HOUR","MINUTE_MAX","MINUTES_IN_DAY","HOUR_MAX","OFFSET_YEAR","OFFSET_MONTH","OFFSET_HOUR","OFFSET_TIME","getStartOfWeek","timestamp","weekdays","today","start","copyTimestamp","findWeekday","prevDay","updateFormatted","updateRelative","hasTime","getEndOfWeek","end","length","getStartOfMonth","updateWeekday","getEndOfMonth","daysInMonth","validateTime","input","exec","hour","minute","parseTime","parts","parseInt","validateTimestamp","parseTimestamp","required","now","parseDate","Error","time","weekday","hasDay","past","present","future","getFullYear","getMonth","getDate","getDay","getHours","getMinutes","getDayIdentifier","getTimeIdentifier","getTimestampIdentifier","a","b","isTimedless","updateHasTime","getTime","updateMinutes","minutes","floor","getWeekday","_","k","m","C","Y","padNumber","x","padded","str","nextDay","relativeDays","mover","days","diffMinutes","min","max","M","D","h","maxDays","getWeekdaySkips","skips","filled","i","skip","j","next","timestampToDate","createDayList","weekdaySkips","stop","currentIdentifier","stopped","push","createIntervalList","first","count","intervals","mins","int","createNativeLocaleFormatter","getOptions","emptyFormatter","_t","_s","Intl","DateTimeFormat","short","intlFormatter","undefined","format","e"],"mappings":"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","file":"js/chunk-5405d814.a0940354.js","sourcesContent":["import './_grid.sass'\nimport { createSimpleFunctional } from '../../util/helpers'\n\nexport default createSimpleFunctional('spacer', 'div', 'v-spacer')\n","function createUTCDate (year: number, month = 0, day = 1) {\n  let date\n  if (year < 100 && year >= 0) {\n    date = new Date(Date.UTC(year, month, day))\n    if (isFinite(date.getUTCFullYear())) {\n      date.setUTCFullYear(year)\n    }\n  } else {\n    date = new Date(Date.UTC(year, month, day))\n  }\n\n  return date\n}\n\nfunction firstWeekOffset (year: number, firstDayOfWeek: number, firstDayOfYear: number) {\n  const firstWeekDayInFirstWeek = 7 + firstDayOfWeek - firstDayOfYear\n  const firstWeekDayOfYear = (7 + createUTCDate(year, 0, firstWeekDayInFirstWeek).getUTCDay() - firstDayOfWeek) % 7\n\n  return -firstWeekDayOfYear + firstWeekDayInFirstWeek - 1\n}\n\nfunction dayOfYear (year: number, month: number, day: number, firstDayOfWeek: number) {\n  let dayOfYear = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334][month]\n  if (month > 1 && isLeapYear(year)) {\n    dayOfYear++\n  }\n\n  return dayOfYear + day\n}\n\nfunction weeksInYear (year: number, firstDayOfWeek: number, firstDayOfYear: number) {\n  const weekOffset = firstWeekOffset(year, firstDayOfWeek, firstDayOfYear)\n  const weekOffsetNext = firstWeekOffset(year + 1, firstDayOfWeek, firstDayOfYear)\n  const daysInYear = isLeapYear(year) ? 366 : 365\n\n  return (daysInYear - weekOffset + weekOffsetNext) / 7\n}\n\nexport function weekNumber (year: number, month: number, day: number, firstDayOfWeek: number, localeFirstDayOfYear: number): number {\n  const weekOffset = firstWeekOffset(year, firstDayOfWeek, localeFirstDayOfYear)\n  const week = Math.ceil((dayOfYear(year, month, day, firstDayOfWeek) - weekOffset) / 7)\n\n  if (week < 1) {\n    return week + weeksInYear(year - 1, firstDayOfWeek, localeFirstDayOfYear)\n  } else if (week > weeksInYear(year, firstDayOfWeek, localeFirstDayOfYear)) {\n    return week - weeksInYear(year, firstDayOfWeek, localeFirstDayOfYear)\n  } else {\n    return week\n  }\n}\n\nexport function isLeapYear (year: number): boolean {\n  return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0)\n}\n","import VBtn from './VBtn'\n\nexport { VBtn }\nexport default VBtn\n","import Vue from 'vue'\n\nexport default Vue.extend({\n  name: 'localable',\n\n  props: {\n    locale: String,\n  },\n\n  computed: {\n    currentLocale (): string {\n      return this.locale || this.$vuetify.lang.current\n    },\n  },\n})\n","import { CalendarTimestamp, CalendarFormatter } from 'vuetify/types'\nimport { isLeapYear } from '../../../util/dateTimeUtils'\n\nexport const PARSE_REGEX = /^(\\d{4})-(\\d{1,2})(-(\\d{1,2}))?([^\\d]+(\\d{1,2}))?(:(\\d{1,2}))?(:(\\d{1,2}))?$/\nexport const PARSE_TIME = /(\\d\\d?)(:(\\d\\d?)|)(:(\\d\\d?)|)/\n\nexport const DAYS_IN_MONTH: number[] = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nexport const DAYS_IN_MONTH_LEAP: number[] = [0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nexport const DAYS_IN_MONTH_MIN = 28\nexport const DAYS_IN_MONTH_MAX = 31\nexport const MONTH_MAX = 12\nexport const MONTH_MIN = 1\nexport const DAY_MIN = 1\nexport const DAYS_IN_WEEK = 7\nexport const MINUTES_IN_HOUR = 60\nexport const MINUTE_MAX = 59\nexport const MINUTES_IN_DAY = 24 * 60\nexport const HOURS_IN_DAY = 24\nexport const HOUR_MAX = 23\nexport const FIRST_HOUR = 0\nexport const OFFSET_YEAR = 10000\nexport const OFFSET_MONTH = 100\nexport const OFFSET_HOUR = 100\nexport const OFFSET_TIME = 10000\n\ntype CalendarTimestampFormatOptions = (timestamp: CalendarTimestamp, short: boolean) => object\ntype CalendarTimestampOperation = (timestamp: CalendarTimestamp) => CalendarTimestamp\nexport type VTime = number | string | {\n  hour: number\n  minute: number\n}\n\nexport type VTimestampInput = number | string | Date;\n\nexport function getStartOfWeek (timestamp: CalendarTimestamp, weekdays: number[], today?: CalendarTimestamp): CalendarTimestamp {\n  const start = copyTimestamp(timestamp)\n  findWeekday(start, weekdays[0], prevDay)\n  updateFormatted(start)\n  if (today) {\n    updateRelative(start, today, start.hasTime)\n  }\n\n  return start\n}\n\nexport function getEndOfWeek (timestamp: CalendarTimestamp, weekdays: number[], today?: CalendarTimestamp): CalendarTimestamp {\n  const end = copyTimestamp(timestamp)\n  findWeekday(end, weekdays[weekdays.length - 1])\n  updateFormatted(end)\n  if (today) {\n    updateRelative(end, today, end.hasTime)\n  }\n\n  return end\n}\n\nexport function getStartOfMonth (timestamp: CalendarTimestamp): CalendarTimestamp {\n  const start = copyTimestamp(timestamp)\n  start.day = DAY_MIN\n  updateWeekday(start)\n  updateFormatted(start)\n\n  return start\n}\n\nexport function getEndOfMonth (timestamp: CalendarTimestamp): CalendarTimestamp {\n  const end = copyTimestamp(timestamp)\n  end.day = daysInMonth(end.year, end.month)\n  updateWeekday(end)\n  updateFormatted(end)\n\n  return end\n}\n\nexport function validateTime (input: any): input is VTime {\n  return (typeof input === 'number' && isFinite(input)) ||\n    (!!PARSE_TIME.exec(input)) ||\n    (typeof input === 'object' && isFinite(input.hour) && isFinite(input.minute))\n}\n\nexport function parseTime (input: any): number | false {\n  if (typeof input === 'number') {\n    // when a number is given, it's minutes since 12:00am\n    return input\n  } else if (typeof input === 'string') {\n    // when a string is given, it's a hh:mm:ss format where seconds are optional\n    const parts = PARSE_TIME.exec(input)\n    if (!parts) {\n      return false\n    }\n\n    return parseInt(parts[1]) * 60 + parseInt(parts[3] || 0)\n  } else if (typeof input === 'object') {\n    // when an object is given, it must have hour and minute\n    if (typeof input.hour !== 'number' || typeof input.minute !== 'number') {\n      return false\n    }\n\n    return input.hour * 60 + input.minute\n  } else {\n    // unsupported type\n    return false\n  }\n}\n\nexport function validateTimestamp (input: any): input is VTimestampInput {\n  return (typeof input === 'number' && isFinite(input)) ||\n    (typeof input === 'string' && !!PARSE_REGEX.exec(input)) ||\n    (input instanceof Date)\n}\n\nexport function parseTimestamp (input: VTimestampInput, required?: false, now?: CalendarTimestamp): CalendarTimestamp | null\nexport function parseTimestamp (input: VTimestampInput, required: true, now?: CalendarTimestamp): CalendarTimestamp\nexport function parseTimestamp (input: VTimestampInput, required = false, now?: CalendarTimestamp): CalendarTimestamp | null {\n  if (typeof input === 'number' && isFinite(input)) {\n    input = new Date(input)\n  }\n\n  if (input instanceof Date) {\n    const date: CalendarTimestamp = parseDate(input)\n\n    if (now) {\n      updateRelative(date, now, date.hasTime)\n    }\n\n    return date\n  }\n\n  if (typeof input !== 'string') {\n    if (required) {\n      throw new Error(`${input} is not a valid timestamp. It must be a Date, number of milliseconds since Epoch, or a string in the format of YYYY-MM-DD or YYYY-MM-DD hh:mm. Zero-padding is optional and seconds are ignored.`)\n    }\n    return null\n  }\n\n  // YYYY-MM-DD hh:mm:ss\n  const parts = PARSE_REGEX.exec(input)\n\n  if (!parts) {\n    if (required) {\n      throw new Error(`${input} is not a valid timestamp. It must be a Date, number of milliseconds since Epoch, or a string in the format of YYYY-MM-DD or YYYY-MM-DD hh:mm. Zero-padding is optional and seconds are ignored.`)\n    }\n\n    return null\n  }\n\n  const timestamp: CalendarTimestamp = {\n    date: input,\n    time: '',\n    year: parseInt(parts[1]),\n    month: parseInt(parts[2]),\n    day: parseInt(parts[4]) || 1,\n    hour: parseInt(parts[6]) || 0,\n    minute: parseInt(parts[8]) || 0,\n    weekday: 0,\n    hasDay: !!parts[4],\n    hasTime: !!(parts[6] && parts[8]),\n    past: false,\n    present: false,\n    future: false,\n  }\n\n  updateWeekday(timestamp)\n  updateFormatted(timestamp)\n\n  if (now) {\n    updateRelative(timestamp, now, timestamp.hasTime)\n  }\n\n  return timestamp\n}\n\nexport function parseDate (date: Date): CalendarTimestamp {\n  return updateFormatted({\n    date: '',\n    time: '',\n    year: date.getFullYear(),\n    month: date.getMonth() + 1,\n    day: date.getDate(),\n    weekday: date.getDay(),\n    hour: date.getHours(),\n    minute: date.getMinutes(),\n    hasDay: true,\n    hasTime: true,\n    past: false,\n    present: true,\n    future: false,\n  })\n}\n\nexport function getDayIdentifier (timestamp: { year: number, month: number, day: number }): number {\n  return timestamp.year * OFFSET_YEAR + timestamp.month * OFFSET_MONTH + timestamp.day\n}\n\nexport function getTimeIdentifier (timestamp: { hour: number, minute: number }): number {\n  return timestamp.hour * OFFSET_HOUR + timestamp.minute\n}\n\nexport function getTimestampIdentifier (timestamp: CalendarTimestamp): number {\n  return getDayIdentifier(timestamp) * OFFSET_TIME + getTimeIdentifier(timestamp)\n}\n\nexport function updateRelative (timestamp: CalendarTimestamp, now: CalendarTimestamp, time = false): CalendarTimestamp {\n  let a = getDayIdentifier(now)\n  let b = getDayIdentifier(timestamp)\n  let present = a === b\n\n  if (timestamp.hasTime && time && present) {\n    a = getTimeIdentifier(now)\n    b = getTimeIdentifier(timestamp)\n    present = a === b\n  }\n\n  timestamp.past = b < a\n  timestamp.present = present\n  timestamp.future = b > a\n\n  return timestamp\n}\n\nexport function isTimedless (input: VTimestampInput): input is (Date | number) {\n  return (input instanceof Date) || (typeof input === 'number' && isFinite(input))\n}\n\nexport function updateHasTime (timestamp: CalendarTimestamp, hasTime: boolean, now?: CalendarTimestamp): CalendarTimestamp {\n  if (timestamp.hasTime !== hasTime) {\n    timestamp.hasTime = hasTime\n    if (!hasTime) {\n      timestamp.hour = HOUR_MAX\n      timestamp.minute = MINUTE_MAX\n      timestamp.time = getTime(timestamp)\n    }\n    if (now) {\n      updateRelative(timestamp, now, timestamp.hasTime)\n    }\n  }\n\n  return timestamp\n}\n\nexport function updateMinutes (timestamp: CalendarTimestamp, minutes: number, now?: CalendarTimestamp): CalendarTimestamp {\n  timestamp.hasTime = true\n  timestamp.hour = Math.floor(minutes / MINUTES_IN_HOUR)\n  timestamp.minute = minutes % MINUTES_IN_HOUR\n  timestamp.time = getTime(timestamp)\n  if (now) {\n    updateRelative(timestamp, now, true)\n  }\n\n  return timestamp\n}\n\nexport function updateWeekday (timestamp: CalendarTimestamp): CalendarTimestamp {\n  timestamp.weekday = getWeekday(timestamp)\n\n  return timestamp\n}\n\nexport function updateFormatted (timestamp: CalendarTimestamp): CalendarTimestamp {\n  timestamp.time = getTime(timestamp)\n  timestamp.date = getDate(timestamp)\n\n  return timestamp\n}\n\nexport function getWeekday (timestamp: CalendarTimestamp): number {\n  if (timestamp.hasDay) {\n    const _ = Math.floor\n    const k = timestamp.day\n    const m = ((timestamp.month + 9) % MONTH_MAX) + 1\n    const C = _(timestamp.year / 100)\n    const Y = (timestamp.year % 100) - (timestamp.month <= 2 ? 1 : 0)\n\n    return (((k + _(2.6 * m - 0.2) - 2 * C + Y + _(Y / 4) + _(C / 4)) % 7) + 7) % 7\n  }\n\n  return timestamp.weekday\n}\n\nexport function daysInMonth (year: number, month: number) {\n  return isLeapYear(year) ? DAYS_IN_MONTH_LEAP[month] : DAYS_IN_MONTH[month]\n}\n\nexport function copyTimestamp (timestamp: CalendarTimestamp): CalendarTimestamp {\n  const { date, time, year, month, day, weekday, hour, minute, hasDay, hasTime, past, present, future } = timestamp\n\n  return { date, time, year, month, day, weekday, hour, minute, hasDay, hasTime, past, present, future }\n}\n\nexport function padNumber (x: number, length: number): string {\n  let padded = String(x)\n  while (padded.length < length) {\n    padded = '0' + padded\n  }\n\n  return padded\n}\n\nexport function getDate (timestamp: CalendarTimestamp): string {\n  let str = `${padNumber(timestamp.year, 4)}-${padNumber(timestamp.month, 2)}`\n\n  if (timestamp.hasDay) str += `-${padNumber(timestamp.day, 2)}`\n\n  return str\n}\n\nexport function getTime (timestamp: CalendarTimestamp): string {\n  if (!timestamp.hasTime) {\n    return ''\n  }\n\n  return `${padNumber(timestamp.hour, 2)}:${padNumber(timestamp.minute, 2)}`\n}\n\nexport function nextMinutes (timestamp: CalendarTimestamp, minutes: number): CalendarTimestamp {\n  timestamp.minute += minutes\n  while (timestamp.minute > MINUTES_IN_HOUR) {\n    timestamp.minute -= MINUTES_IN_HOUR\n    timestamp.hour++\n    if (timestamp.hour >= HOURS_IN_DAY) {\n      nextDay(timestamp)\n      timestamp.hour = FIRST_HOUR\n    }\n  }\n\n  return timestamp\n}\n\nexport function nextDay (timestamp: CalendarTimestamp): CalendarTimestamp {\n  timestamp.day++\n  timestamp.weekday = (timestamp.weekday + 1) % DAYS_IN_WEEK\n  if (timestamp.day > DAYS_IN_MONTH_MIN && timestamp.day > daysInMonth(timestamp.year, timestamp.month)) {\n    timestamp.day = DAY_MIN\n    timestamp.month++\n    if (timestamp.month > MONTH_MAX) {\n      timestamp.month = MONTH_MIN\n      timestamp.year++\n    }\n  }\n\n  return timestamp\n}\n\nexport function prevDay (timestamp: CalendarTimestamp): CalendarTimestamp {\n  timestamp.day--\n  timestamp.weekday = (timestamp.weekday + 6) % DAYS_IN_WEEK\n  if (timestamp.day < DAY_MIN) {\n    timestamp.month--\n    if (timestamp.month < MONTH_MIN) {\n      timestamp.year--\n      timestamp.month = MONTH_MAX\n    }\n    timestamp.day = daysInMonth(timestamp.year, timestamp.month)\n  }\n\n  return timestamp\n}\n\nexport function relativeDays (\n  timestamp: CalendarTimestamp,\n  mover: CalendarTimestampOperation = nextDay,\n  days = 1\n): CalendarTimestamp {\n  while (--days >= 0) mover(timestamp)\n\n  return timestamp\n}\n\nexport function diffMinutes (min: CalendarTimestamp, max: CalendarTimestamp) {\n  const Y = (max.year - min.year) * 525600\n  const M = (max.month - min.month) * 43800\n  const D = (max.day - min.day) * 1440\n  const h = (max.hour - min.hour) * 60\n  const m = (max.minute - min.minute)\n\n  return Y + M + D + h + m\n}\n\nexport function findWeekday (timestamp: CalendarTimestamp, weekday: number,\n  mover: CalendarTimestampOperation = nextDay, maxDays = 6): CalendarTimestamp {\n  while (timestamp.weekday !== weekday && --maxDays >= 0) mover(timestamp)\n\n  return timestamp\n}\n\nexport function getWeekdaySkips (weekdays: number[]): number[] {\n  const skips: number[] = [1, 1, 1, 1, 1, 1, 1]\n  const filled: number[] = [0, 0, 0, 0, 0, 0, 0]\n  for (let i = 0; i < weekdays.length; i++) {\n    filled[weekdays[i]] = 1\n  }\n  for (let k = 0; k < DAYS_IN_WEEK; k++) {\n    let skip = 1\n    for (let j = 1; j < DAYS_IN_WEEK; j++) {\n      const next = (k + j) % DAYS_IN_WEEK\n      if (filled[next]) {\n        break\n      }\n      skip++\n    }\n    skips[k] = filled[k] * skip\n  }\n\n  return skips\n}\n\nexport function timestampToDate (timestamp: CalendarTimestamp): Date {\n  const time = `${padNumber(timestamp.hour, 2)}:${padNumber(timestamp.minute, 2)}`\n  const date = timestamp.date\n\n  return new Date(`${date}T${time}:00+00:00`)\n}\n\nexport function createDayList (\n  start: CalendarTimestamp,\n  end: CalendarTimestamp,\n  now: CalendarTimestamp,\n  weekdaySkips: number[],\n  max = 42,\n  min = 0\n): CalendarTimestamp[] {\n  const stop = getDayIdentifier(end)\n  const days: CalendarTimestamp[] = []\n  let current = copyTimestamp(start)\n  let currentIdentifier = 0\n  let stopped = currentIdentifier === stop\n\n  if (stop < getDayIdentifier(start)) {\n    throw new Error('End date is earlier than start date.')\n  }\n\n  while ((!stopped || days.length < min) && days.length < max) {\n    currentIdentifier = getDayIdentifier(current)\n    stopped = stopped || currentIdentifier === stop\n    if (weekdaySkips[current.weekday] === 0) {\n      current = nextDay(current)\n      continue\n    }\n    const day = copyTimestamp(current)\n    updateFormatted(day)\n    updateRelative(day, now)\n    days.push(day)\n    current = relativeDays(current, nextDay, weekdaySkips[current.weekday])\n  }\n\n  if (!days.length) throw new Error('No dates found using specified start date, end date, and weekdays.')\n\n  return days\n}\n\nexport function createIntervalList (timestamp: CalendarTimestamp, first: number,\n  minutes: number, count: number, now?: CalendarTimestamp): CalendarTimestamp[] {\n  const intervals: CalendarTimestamp[] = []\n\n  for (let i = 0; i < count; i++) {\n    const mins = first + (i * minutes)\n    const int = copyTimestamp(timestamp)\n    intervals.push(updateMinutes(int, mins, now))\n  }\n\n  return intervals\n}\n\nexport function createNativeLocaleFormatter (locale: string, getOptions: CalendarTimestampFormatOptions): CalendarFormatter {\n  const emptyFormatter: CalendarFormatter = (_t, _s) => ''\n\n  if (typeof Intl === 'undefined' || typeof Intl.DateTimeFormat === 'undefined') {\n    return emptyFormatter\n  }\n\n  return (timestamp, short) => {\n    try {\n      const intlFormatter = new Intl.DateTimeFormat(locale || undefined, getOptions(timestamp, short))\n\n      return intlFormatter.format(timestampToDate(timestamp))\n    } catch (e) {\n      return ''\n    }\n  }\n}\n"],"sourceRoot":""}