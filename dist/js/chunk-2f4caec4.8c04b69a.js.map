{"version":3,"sources":["webpack:///../../../src/components/VGrid/VRow.ts","webpack:///./src/data/apexDataSeries.js","webpack:///../../../src/components/VGrid/VCol.ts","webpack:///./src/data/apexChart.js"],"names":["breakpoints","ALIGNMENT","makeProps","prefix","def","reduce","props","val","upperFirst","alignValidator","str","includes","alignProps","type","String","default","validator","justifyValidator","justifyProps","alignContentValidator","alignContentProps","propMap","align","Object","keys","justify","alignContent","classMap","breakpointClass","prop","className","breakpoint","replace","toLowerCase","cache","Map","Vue","extend","name","functional","tag","dense","Boolean","noGutters","render","h","data","children","cacheKey","classList","get","forEach","value","push","set","mergeData","staticClass","class","generateDayWiseTimeSeries","baseval","count","yrange","i","series","x","y","Math","floor","random","max","min","sparklineData","randomizeArray","arg","temporaryValue","randomIndex","array","slice","currentIndex","length","scatterDatetimeChild","dataSeries","monthDataSeries1","prices","dates","monthDataSeries2","monthDataSeries3","breakpointProps","Number","offsetProps","orderProps","col","offset","order","cols","alignSelf","parent","hasColClasses","some","startsWith","apexDemo","chartOptions","chart","id","xaxis","categories","basicArea","zoom","enabled","dataLabels","stroke","curve","labels","title","text","subtitle","legend","horizontalAlign","splineArea","toolbar","show","tooltip","format","dateTimeXaxis","annotations","yaxis","borderColor","label","style","color","background","Date","getTime","yAxisIndex","markers","size","tickAmount","fill","gradient","shadeIntensity","opacityFrom","opacityTo","stops","negativeArea","axisBorder","axisTicks","floating","offsetY","offsetX","opacity","fixed","position","grid","lines","padding","left","stackedArea","stacked","events","selection","e","console","log","colors","nullAreaChart","animations","pattern","width","depth","hover","intersect","shared","theme","palette","basicBarChart","plotOptions","bar","horizontal","endingShape","groupedBar","fontSize","stackedbar","stackType","formatter","negativeBar","barHeight","showLines","abs","round","customDataLabelBar","distributed","textAnchor","opt","w","globals","dataPointIndex","dropShadow","patternedBar","shadow","blur","states","filter","basicColumnChart","columnWidth","columnDataLabels","height","crosshairs","colorFrom","colorTo","shade","gradientToColors","undefined","inverseColors","stackedColumn","responsive","options","negativeColumn","ranges","from","to","toFixed","rotate","distributedColumnChart","basicLineChart","row","lineChartWIthDataLabel","top","gradientLineChart","dashedLineChart","dashArray","sizeOffset","brushLineChart","chartOptionsArea","autoSelected","chartOptionsBrush","brush","target","lineColumn","opposite","multipleYxis","seriesName","lineArea","lineColumnArea","simplePie","simpleDonut","monochromePie","monochrome","gradientDonut","donutwithPattern","basicRadar","radarMultiSeries","radarwithPolygonFill","radar","polygons","strokeColor","strokeWidth","simpleScatter","parseFloat","scatterDatetime","spark1","sparkline","spark2","spark3","spark4","marker","spark5","spark6","spark7","spark8","spark9","spark10","customChartOne","clipMarkers","customChartTwo","customChartThree","strokeDashArray","customChartFour","customChartFive","radialBar","total","lineCap","customChartSix","startingShape","customChartSeven","enabledOnSeries","customChartEight","customChartNine","customChartTen","customChartEleven","customChartTwelve","customChartThirteen","customChartFourteen","customChartFifteen","customChartSixteen","pie","expandOnClick","startAngle","customChartSeventeen","hollow","customChartEighteen"],"mappings":"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AChB,IAAIK,EACFC,KAAKC,MAAMD,KAAKE,UAAYP,EAAOQ,IAAMR,EAAOS,IAAM,IAAMT,EAAOS,IAErEP,EAAOV,KAAK,CAACM,EAASM,IACtBN,GAAW,MACXG,IAEF,OAAOC,GAGIkB,EAAa,CACxBC,iBAAkB,CAChBC,OAAQ,CACN,QACA,KACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,OACA,QACA,OACA,QACA,OACA,QACA,QACA,OACA,SAEFC,MAAO,CACL,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,QAGJC,iBAAkB,CAChBF,OAAQ,CACN,OACA,OACA,OACA,QACA,OACA,OACA,OACA,QACA,OACA,QACA,OACA,QACA,QACA,OACA,QACA,OACA,OACA,OACA,QACA,MAEFC,MAAO,CACL,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAGJE,iBAAkB,CAChcACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cA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,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,QAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,MAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,WAAe,OAChB,CAAC,SAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,SAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,SAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,MAChB,CAAC,WAAe,OAChB,CAAC,QAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,MAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,SAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,MAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,SAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC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","file":"js/chunk-2f4caec4.8c04b69a.js","sourcesContent":["import './VGrid.sass'\n\nimport Vue, { PropOptions } from 'vue'\nimport mergeData from '../../util/mergeData'\nimport { upperFirst } from '../../util/helpers'\n\n// no xs\nconst breakpoints = ['sm', 'md', 'lg', 'xl']\n\nconst ALIGNMENT = ['start', 'end', 'center']\n\nfunction makeProps (prefix: string, def: () => PropOptions) {\n  return breakpoints.reduce((props, val) => {\n    props[prefix + upperFirst(val)] = def()\n    return props\n  }, {} as Dictionary<PropOptions>)\n}\n\nconst alignValidator = (str: any) => [...ALIGNMENT, 'baseline', 'stretch'].includes(str)\nconst alignProps = makeProps('align', () => ({\n  type: String,\n  default: null,\n  validator: alignValidator,\n}))\n\nconst justifyValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around'].includes(str)\nconst justifyProps = makeProps('justify', () => ({\n  type: String,\n  default: null,\n  validator: justifyValidator,\n}))\n\nconst alignContentValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around', 'stretch'].includes(str)\nconst alignContentProps = makeProps('alignContent', () => ({\n  type: String,\n  default: null,\n  validator: alignContentValidator,\n}))\n\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps),\n}\n\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content',\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: string) {\n  let className = classMap[type]\n  if (val == null) {\n    return undefined\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // .align-items-sm-center\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst cache = new Map<string, any[]>()\n\nexport default Vue.extend({\n  name: 'v-row',\n  functional: true,\n  props: {\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    dense: Boolean,\n    noGutters: Boolean,\n    align: {\n      type: String,\n      default: null,\n      validator: alignValidator,\n    },\n    ...alignProps,\n    justify: {\n      type: String,\n      default: null,\n      validator: justifyValidator,\n    },\n    ...justifyProps,\n    alignContent: {\n      type: String,\n      default: null,\n      validator: alignContentValidator,\n    },\n    ...alignContentProps,\n  },\n  render (h, { props, data, children }) {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = ''\n    for (const prop in props) {\n      cacheKey += String((props as any)[prop])\n    }\n    let classList = cache.get(cacheKey)\n\n    if (!classList) {\n      classList = []\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      classList.push({\n        'no-gutters': props.noGutters,\n        'row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent,\n      })\n\n      cache.set(cacheKey, classList)\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'row',\n        class: classList,\n      }),\n      children\n    )\n  },\n})\n","export const generateDayWiseTimeSeries = function (baseval, count, yrange) {\r\n  var i = 0\r\n  var series = []\r\n  while (i < count) {\r\n    var x = baseval\r\n    var y =\r\n      Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min\r\n\r\n    series.push([x, y])\r\n    baseval += 86400000\r\n    i++\r\n  }\r\n  return series\r\n}\r\n\r\nexport const sparklineData = [\r\n  47,\r\n  45,\r\n  54,\r\n  38,\r\n  56,\r\n  24,\r\n  65,\r\n  31,\r\n  37,\r\n  39,\r\n  62,\r\n  51,\r\n  35,\r\n  41,\r\n  35,\r\n  27,\r\n  93,\r\n  53,\r\n  61,\r\n  27,\r\n  54,\r\n  43,\r\n  19,\r\n  46,\r\n]\r\n\r\nexport const randomizeArray = function (arg) {\r\n  var array = arg.slice()\r\n  var currentIndex = array.length\r\n    var temporaryValue\r\n    var randomIndex\r\n\r\n  while (currentIndex !== 0) {\r\n    randomIndex = Math.floor(Math.random() * currentIndex)\r\n    currentIndex -= 1\r\n\r\n    temporaryValue = array[currentIndex]\r\n    array[currentIndex] = array[randomIndex]\r\n    array[randomIndex] = temporaryValue\r\n  }\r\n\r\n  return array\r\n}\r\n\r\nexport const scatterDatetimeChild = function (baseval, count, yrange) {\r\n  var i = 0\r\n  var series = []\r\n  while (i < count) {\r\n    var y =\r\n      Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min\r\n\r\n    series.push([baseval, y])\r\n    baseval += 86400000\r\n    i++\r\n  }\r\n  return series\r\n}\r\n\r\nexport const dataSeries = {\r\n  monthDataSeries1: {\r\n    prices: [\r\n      8107.85,\r\n      8128.0,\r\n      8122.9,\r\n      8165.5,\r\n      8340.7,\r\n      8423.7,\r\n      8423.5,\r\n      8514.3,\r\n      8481.85,\r\n      8487.7,\r\n      8506.9,\r\n      8626.2,\r\n      8668.95,\r\n      8602.3,\r\n      8607.55,\r\n      8512.9,\r\n      8496.25,\r\n      8600.65,\r\n      8881.1,\r\n      9340.85,\r\n    ],\r\n    dates: [\r\n      '13 ',\r\n      '14 ',\r\n      '15 ',\r\n      '16 ',\r\n      '17 ',\r\n      '20 ',\r\n      '21 ',\r\n      '22 ',\r\n      '23 ',\r\n      '24 ',\r\n      '27 ',\r\n      '28 ',\r\n      '29 ',\r\n      '30 ',\r\n      '01 ',\r\n      '04 ',\r\n      '05 ',\r\n      '06 ',\r\n      '07 ',\r\n      '08 ',\r\n    ],\r\n  },\r\n  monthDataSeries2: {\r\n    prices: [\r\n      8423.7,\r\n      8423.5,\r\n      8514.3,\r\n      8481.85,\r\n      8487.7,\r\n      8506.9,\r\n      8626.2,\r\n      8668.95,\r\n      8602.3,\r\n      8607.55,\r\n      8512.9,\r\n      8496.25,\r\n      8600.65,\r\n      8881.1,\r\n      9040.85,\r\n      8340.7,\r\n      8165.5,\r\n      8122.9,\r\n      8107.85,\r\n      8128.0,\r\n    ],\r\n    dates: [\r\n      '13 Nov 2017',\r\n      '14 Nov 2017',\r\n      '15 Nov 2017',\r\n      '16 Nov 2017',\r\n      '17 Nov 2017',\r\n      '20 Nov 2017',\r\n      '21 Nov 2017',\r\n      '22 Nov 2017',\r\n      '23 Nov 2017',\r\n      '24 Nov 2017',\r\n      '27 Nov 2017',\r\n      '28 Nov 2017',\r\n      '29 Nov 2017',\r\n      '30 Nov 2017',\r\n      '01 Dec 2017',\r\n      '04 Dec 2017',\r\n      '05 Dec 2017',\r\n      '06 Dec 2017',\r\n      '07 Dec 2017',\r\n      '08 Dec 2017',\r\n    ],\r\n  },\r\n  monthDataSeries3: {\r\n    prices: [\r\n      7114.25,\r\n      7126.6,\r\n      7116.95,\r\n      7203.7,\r\n      7233.75,\r\n      7451.0,\r\n      7381.15,\r\n      7348.95,\r\n      7347.75,\r\n      7311.25,\r\n      7266.4,\r\n      7253.25,\r\n      7215.45,\r\n      7266.35,\r\n      7315.25,\r\n      7237.2,\r\n      7191.4,\r\n      7238.95,\r\n      7222.6,\r\n      7217.9,\r\n      7359.3,\r\n      7371.55,\r\n      7371.15,\r\n      7469.2,\r\n      7429.25,\r\n      7434.65,\r\n      7451.1,\r\n      7475.25,\r\n      7566.25,\r\n      7556.8,\r\n      7525.55,\r\n      7555.45,\r\n      7560.9,\r\n      7490.7,\r\n      7527.6,\r\n      7551.9,\r\n      7514.85,\r\n      7577.95,\r\n      7592.3,\r\n      7621.95,\r\n      7707.95,\r\n      7859.1,\r\n      7815.7,\r\n      7739.0,\r\n      7778.7,\r\n      7839.45,\r\n      7756.45,\r\n      7669.2,\r\n      7580.45,\r\n      7452.85,\r\n      7617.25,\r\n      7701.6,\r\n      7606.8,\r\n      7620.05,\r\n      7513.85,\r\n      7498.45,\r\n      7575.45,\r\n      7601.95,\r\n      7589.1,\r\n      7525.85,\r\n      7569.5,\r\n      7702.5,\r\n      7812.7,\r\n      7803.75,\r\n      7816.3,\r\n      7851.15,\r\n      7912.2,\r\n      7972.8,\r\n      8145.0,\r\n      8161.1,\r\n      8121.05,\r\n      8071.25,\r\n      8088.2,\r\n      8154.45,\r\n      8148.3,\r\n      8122.05,\r\n      8132.65,\r\n      8074.55,\r\n      7952.8,\r\n      7885.55,\r\n      7733.9,\r\n      7897.15,\r\n      7973.15,\r\n      7888.5,\r\n      7842.8,\r\n      7838.4,\r\n      7909.85,\r\n      7892.75,\r\n      7897.75,\r\n      7820.05,\r\n      7904.4,\r\n      7872.2,\r\n      7847.5,\r\n      7849.55,\r\n      7789.6,\r\n      7736.35,\r\n      7819.4,\r\n      7875.35,\r\n      7871.8,\r\n      8076.5,\r\n      8114.8,\r\n      8193.55,\r\n      8217.1,\r\n      8235.05,\r\n      8215.3,\r\n      8216.4,\r\n      8301.55,\r\n      8235.25,\r\n      8229.75,\r\n      8201.95,\r\n      8164.95,\r\n      8107.85,\r\n      8128.0,\r\n      8122.9,\r\n      8165.5,\r\n      8340.7,\r\n      8423.7,\r\n      8423.5,\r\n      8514.3,\r\n      8481.85,\r\n      8487.7,\r\n      8506.9,\r\n      8626.2,\r\n    ],\r\n    dates: [\r\n      '02 Jun 2017',\r\n      '05 Jun 2017',\r\n      '06 Jun 2017',\r\n      '07 Jun 2017',\r\n      '08 Jun 2017',\r\n      '09 Jun 2017',\r\n      '12 Jun 2017',\r\n      '13 Jun 2017',\r\n      '14 Jun 2017',\r\n      '15 Jun 2017',\r\n      '16 Jun 2017',\r\n      '19 Jun 2017',\r\n      '20 Jun 2017',\r\n      '21 Jun 2017',\r\n      '22 Jun 2017',\r\n      '23 Jun 2017',\r\n      '27 Jun 2017',\r\n      '28 Jun 2017',\r\n      '29 Jun 2017',\r\n      '30 Jun 2017',\r\n      '03 Jul 2017',\r\n      '04 Jul 2017',\r\n      '05 Jul 2017',\r\n      '06 Jul 2017',\r\n      '07 Jul 2017',\r\n      '10 Jul 2017',\r\n      '11 Jul 2017',\r\n      '12 Jul 2017',\r\n      '13 Jul 2017',\r\n      '14 Jul 2017',\r\n      '17 Jul 2017',\r\n      '18 Jul 2017',\r\n      '19 Jul 2017',\r\n      '20 Jul 2017',\r\n      '21 Jul 2017',\r\n      '24 Jul 2017',\r\n      '25 Jul 2017',\r\n      '26 Jul 2017',\r\n      '27 Jul 2017',\r\n      '28 Jul 2017',\r\n      '31 Jul 2017',\r\n      '01 Aug 2017',\r\n      '02 Aug 2017',\r\n      '03 Aug 2017',\r\n      '04 Aug 2017',\r\n      '07 Aug 2017',\r\n      '08 Aug 2017',\r\n      '09 Aug 2017',\r\n      '10 Aug 2017',\r\n      '11 Aug 2017',\r\n      '14 Aug 2017',\r\n      '16 Aug 2017',\r\n      '17 Aug 2017',\r\n      '18 Aug 2017',\r\n      '21 Aug 2017',\r\n      '22 Aug 2017',\r\n      '23 Aug 2017',\r\n      '24 Aug 2017',\r\n      '28 Aug 2017',\r\n      '29 Aug 2017',\r\n      '30 Aug 2017',\r\n      '31 Aug 2017',\r\n      '01 Sep 2017',\r\n      '04 Sep 2017',\r\n      '05 Sep 2017',\r\n      '06 Sep 2017',\r\n      '07 Sep 2017',\r\n      '08 Sep 2017',\r\n      '11 Sep 2017',\r\n      '12 Sep 2017',\r\n      '13 Sep 2017',\r\n      '14 Sep 2017',\r\n      '15 Sep 2017',\r\n      '18 Sep 2017',\r\n      '19 Sep 2017',\r\n      '20 Sep 2017',\r\n      '21 Sep 2017',\r\n      '22 Sep 2017',\r\n      '25 Sep 2017',\r\n      '26 Sep 2017',\r\n      '27 Sep 2017',\r\n      '28 Sep 2017',\r\n      '29 Sep 2017',\r\n      '03 Oct 2017',\r\n      '04 Oct 2017',\r\n      '05 Oct 2017',\r\n      '06 Oct 2017',\r\n      '09 Oct 2017',\r\n      '10 Oct 2017',\r\n      '11 Oct 2017',\r\n      '12 Oct 2017',\r\n      '13 Oct 2017',\r\n      '16 Oct 2017',\r\n      '17 Oct 2017',\r\n      '18 Oct 2017',\r\n      '19 Oct 2017',\r\n      '23 Oct 2017',\r\n      '24 Oct 2017',\r\n      '25 Oct 2017',\r\n      '26 Oct 2017',\r\n      '27 Oct 2017',\r\n      '30 Oct 2017',\r\n      '31 Oct 2017',\r\n      '01 Nov 2017',\r\n      '02 Nov 2017',\r\n      '03 Nov 2017',\r\n      '06 Nov 2017',\r\n      '07 Nov 2017',\r\n      '08 Nov 2017',\r\n      '09 Nov 2017',\r\n      '10 Nov 2017',\r\n      '13 Nov 2017',\r\n      '14 Nov 2017',\r\n      '15 Nov 2017',\r\n      '16 Nov 2017',\r\n      '17 Nov 2017',\r\n      '20 Nov 2017',\r\n      '21 Nov 2017',\r\n      '22 Nov 2017',\r\n      '23 Nov 2017',\r\n      '24 Nov 2017',\r\n      '27 Nov 2017',\r\n      '28 Nov 2017',\r\n    ],\r\n  },\r\n}\r\n","import './VGrid.sass'\n\nimport Vue, { VNode, PropOptions } from 'vue'\nimport mergeData from '../../util/mergeData'\nimport { upperFirst } from '../../util/helpers'\n\n// no xs\nconst breakpoints = ['sm', 'md', 'lg', 'xl']\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['offset' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['order' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps),\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: boolean | string | number) {\n  let className = type\n  if (val == null || val === false) {\n    return undefined\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n  if (type === 'col' && (val === '' || val === true)) {\n    // .col-md\n    return className.toLowerCase()\n  }\n  // .order-md-6\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst cache = new Map<string, any[]>()\n\nexport default Vue.extend({\n  name: 'v-col',\n  functional: true,\n  props: {\n    cols: {\n      type: [Boolean, String, Number],\n      default: false,\n    },\n    ...breakpointProps,\n    offset: {\n      type: [String, Number],\n      default: null,\n    },\n    ...offsetProps,\n    order: {\n      type: [String, Number],\n      default: null,\n    },\n    ...orderProps,\n    alignSelf: {\n      type: String,\n      default: null,\n      validator: (str: any) => ['auto', 'start', 'end', 'center', 'baseline', 'stretch'].includes(str),\n    },\n    tag: {\n      type: String,\n      default: 'div',\n    },\n  },\n  render (h, { props, data, children, parent }): VNode {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = ''\n    for (const prop in props) {\n      cacheKey += String((props as any)[prop])\n    }\n    let classList = cache.get(cacheKey)\n\n    if (!classList) {\n      classList = []\n      // Loop through `col`, `offset`, `order` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string | number | boolean = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('col-'))\n\n      classList.push({\n        // Default to .col if no other col-{bp}-* classes generated nor `cols` specified.\n        col: !hasColClasses || !props.cols,\n        [`col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf,\n      })\n\n      cache.set(cacheKey, classList)\n    }\n\n    return h(props.tag, mergeData(data, { class: classList }), children)\n  },\n})\n","import {\r\n  scatterDatetimeChild,\r\n  dataSeries,\r\n  generateDayWiseTimeSeries,\r\n  randomizeArray,\r\n  sparklineData,\r\n\r\n } from '@/data/apexDataSeries'\r\n\r\nvar toolTipBg = '#262c49'\r\n\r\nexport const apexDemo = {\r\n    chartOptions: {\r\n        chart: {\r\n          id: 'vuechart-example',\r\n        },\r\n        xaxis: {\r\n          categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998],\r\n        },\r\n      },\r\n      series: [{\r\n        name: 'series-1',\r\n        data: [30, 40, 35, 50, 49, 60, 70, 91],\r\n      }],\r\n}\r\n\r\n// start::basicArea\r\nexport const basicArea = {\r\n\r\n      chartOptions: {\r\n        chart: {\r\n          zoom: {\r\n            enabled: false,\r\n          },\r\n          \r\n        },\r\n        // tooltip: {\r\n        //   theme: 'dark'\r\n        // },\r\n        dataLabels: {\r\n          enabled: false,\r\n        },\r\n        stroke: {\r\n          curve: 'straight',\r\n        },\r\n        series: [{\r\n          name: 'STOCK ABC',\r\n          data: dataSeries.monthDataSeries1.prices,\r\n        }],\r\n        labels: dataSeries.monthDataSeries1.dates,\r\n        title: {\r\n          text: '',\r\n          align: 'left',\r\n        },\r\n        subtitle: {\r\n          text: '',\r\n          align: 'right',\r\n        },\r\n\r\n        legend: {\r\n          horizontalAlign: 'left',\r\n        },\r\n      },\r\n\r\n}\r\n\r\nexport const splineArea = {\r\n    series: [{\r\n        name: 'series1',\r\n        data: [31, 40, 28, 51, 42, 109, 100],\r\n      }, {\r\n        name: 'series2',\r\n        data: [11, 32, 45, 32, 34, 52, 41],\r\n      }],\r\n      chartOptions: {\r\n        chart: {\r\n          toolbar: {\r\n            show: false,\r\n          }\r\n        },\r\n        dataLabels: {\r\n          enabled: false,\r\n        },\r\n        stroke: {\r\n          curve: 'smooth',\r\n        },\r\n\r\n        xaxis: {\r\n          type: 'datetime',\r\n          categories: ['2018-09-19T00:00:00', '2018-09-19T01:30:00', '2018-09-19T02:30:00',\r\n            '2018-09-19T03:30:00', '2018-09-19T04:30:00', '2018-09-19T05:30:00',\r\n            '2018-09-19T06:30:00',\r\n          ],\r\n        },\r\n        tooltip: {\r\n          x: {\r\n            format: 'dd/MM/yy HH:mm',\r\n          },\r\n\r\n        },\r\n      },\r\n}\r\n// start::datetime X-axis\r\nexport const dateTimeXaxis = {\r\n    series: [{\r\n        data: [\r\n          [1327359600000, 30.95],\r\n          [1327446000000, 31.34],\r\n          [1327532400000, 31.18],\r\n          [1327618800000, 31.05],\r\n          [1327878000000, 31.00],\r\n          [1327964400000, 30.95],\r\n          [1328050800000, 31.24],\r\n          [1328137200000, 31.29],\r\n          [1328223600000, 31.85],\r\n          [1328482800000, 31.86],\r\n          [1328569200000, 32.28],\r\n          [1328655600000, 32.10],\r\n          [1328742000000, 32.65],\r\n          [1328828400000, 32.21],\r\n          [1329087600000, 32.35],\r\n          [1329174000000, 32.44],\r\n          [1329260400000, 32.46],\r\n          [1329346800000, 32.86],\r\n          [1329433200000, 32.75],\r\n          [1329778800000, 32.54],\r\n          [1329865200000, 32.33],\r\n          [1329951600000, 32.97],\r\n          [1330038000000, 33.41],\r\n          [1330297200000, 33.27],\r\n          [1330383600000, 33.27],\r\n          [1330470000000, 32.89],\r\n          [1330556400000, 33.10],\r\n          [1330642800000, 33.73],\r\n          [1330902000000, 33.22],\r\n          [1330988400000, 31.99],\r\n          [1331074800000, 32.41],\r\n          [1331161200000, 33.05],\r\n          [1331247600000, 33.64],\r\n          [1331506800000, 33.56],\r\n          [1331593200000, 34.22],\r\n          [1331679600000, 33.77],\r\n          [1331766000000, 34.17],\r\n          [1331852400000, 33.82],\r\n          [1332111600000, 34.51],\r\n          [1332198000000, 33.16],\r\n          [1332284400000, 33.56],\r\n          [1332370800000, 33.71],\r\n          [1332457200000, 33.81],\r\n          [1332712800000, 34.40],\r\n          [1332799200000, 34.63],\r\n          [1332885600000, 34.46],\r\n          [1332972000000, 34.48],\r\n          [1333058400000, 34.31],\r\n          [1333317600000, 34.70],\r\n          [1333404000000, 34.31],\r\n          [1333490400000, 33.46],\r\n          [1333576800000, 33.59],\r\n          [1333922400000, 33.22],\r\n          [1334008800000, 32.61],\r\n          [1334095200000, 33.01],\r\n          [1334181600000, 33.55],\r\n          [1334268000000, 33.18],\r\n          [1334527200000, 32.84],\r\n          [1334613600000, 33.84],\r\n          [1334700000000, 33.39],\r\n          [1334786400000, 32.91],\r\n          [1334872800000, 33.06],\r\n          [1335132000000, 32.62],\r\n          [1335218400000, 32.40],\r\n          [1335304800000, 33.13],\r\n          [1335391200000, 33.26],\r\n          [1335477600000, 33.58],\r\n          [1335736800000, 33.55],\r\n          [1335823200000, 33.77],\r\n          [1335909600000, 33.76],\r\n          [1335996000000, 33.32],\r\n          [1336082400000, 32.61],\r\n          [1336341600000, 32.52],\r\n          [1336428000000, 32.67],\r\n          [1336514400000, 32.52],\r\n          [1336600800000, 31.92],\r\n          [1336687200000, 32.20],\r\n          [1336946400000, 32.23],\r\n          [1337032800000, 32.33],\r\n          [1337119200000, 32.36],\r\n          [1337205600000, 32.01],\r\n          [1337292000000, 31.31],\r\n          [1337551200000, 32.01],\r\n          [1337637600000, 32.01],\r\n          [1337724000000, 32.18],\r\n          [1337810400000, 31.54],\r\n          [1337896800000, 31.60],\r\n          [1338242400000, 32.05],\r\n          [1338328800000, 31.29],\r\n          [1338415200000, 31.05],\r\n          [1338501600000, 29.82],\r\n          [1338760800000, 30.31],\r\n          [1338847200000, 30.70],\r\n          [1338933600000, 31.69],\r\n          [1339020000000, 31.32],\r\n          [1339106400000, 31.65],\r\n          [1339365600000, 31.13],\r\n          [1339452000000, 31.77],\r\n          [1339538400000, 31.79],\r\n          [1339624800000, 31.67],\r\n          [1339711200000, 32.39],\r\n          [1339970400000, 32.63],\r\n          [1340056800000, 32.89],\r\n          [1340143200000, 31.99],\r\n          [1340229600000, 31.23],\r\n          [1340316000000, 31.57],\r\n          [1340575200000, 30.84],\r\n          [1340661600000, 31.07],\r\n          [1340748000000, 31.41],\r\n          [1340834400000, 31.17],\r\n          [1340920800000, 32.37],\r\n          [1341180000000, 32.19],\r\n          [1341266400000, 32.51],\r\n          [1341439200000, 32.53],\r\n          [1341525600000, 31.37],\r\n          [1341784800000, 30.43],\r\n          [1341871200000, 30.44],\r\n          [1341957600000, 30.20],\r\n          [1342044000000, 30.14],\r\n          [1342130400000, 30.65],\r\n          [1342389600000, 30.40],\r\n          [1342476000000, 30.65],\r\n          [1342562400000, 31.43],\r\n          [1342648800000, 31.89],\r\n          [1342735200000, 31.38],\r\n          [1342994400000, 30.64],\r\n          [1343080800000, 30.02],\r\n          [1343167200000, 30.33],\r\n          [1343253600000, 30.95],\r\n          [1343340000000, 31.89],\r\n          [1343599200000, 31.01],\r\n          [1343685600000, 30.88],\r\n          [1343772000000, 30.69],\r\n          [1343858400000, 30.58],\r\n          [1343944800000, 32.02],\r\n          [1344204000000, 32.14],\r\n          [1344290400000, 32.37],\r\n          [1344376800000, 32.51],\r\n          [1344463200000, 32.65],\r\n          [1344549600000, 32.64],\r\n          [1344808800000, 32.27],\r\n          [1344895200000, 32.10],\r\n          [1344981600000, 32.91],\r\n          [1345068000000, 33.65],\r\n          [1345154400000, 33.80],\r\n          [1345413600000, 33.92],\r\n          [1345500000000, 33.75],\r\n          [1345586400000, 33.84],\r\n          [1345672800000, 33.50],\r\n          [1345759200000, 32.26],\r\n          [1346018400000, 32.32],\r\n          [1346104800000, 32.06],\r\n          [1346191200000, 31.96],\r\n          [1346277600000, 31.46],\r\n          [1346364000000, 31.27],\r\n          [1346709600000, 31.43],\r\n          [1346796000000, 32.26],\r\n          [1346882400000, 32.79],\r\n          [1346968800000, 32.46],\r\n          [1347228000000, 32.13],\r\n          [1347314400000, 32.43],\r\n          [1347400800000, 32.42],\r\n          [1347487200000, 32.81],\r\n          [1347573600000, 33.34],\r\n          [1347832800000, 33.41],\r\n          [1347919200000, 32.57],\r\n          [1348005600000, 33.12],\r\n          [1348092000000, 34.53],\r\n          [1348178400000, 33.83],\r\n          [1348437600000, 33.41],\r\n          [1348524000000, 32.90],\r\n          [1348610400000, 32.53],\r\n          [1348696800000, 32.80],\r\n          [1348783200000, 32.44],\r\n          [1349042400000, 32.62],\r\n          [1349128800000, 32.57],\r\n          [1349215200000, 32.60],\r\n          [1349301600000, 32.68],\r\n          [1349388000000, 32.47],\r\n          [1349647200000, 32.23],\r\n          [1349733600000, 31.68],\r\n          [1349820000000, 31.51],\r\n          [1349906400000, 31.78],\r\n          [1349992800000, 31.94],\r\n          [1350252000000, 32.33],\r\n          [1350338400000, 33.24],\r\n          [1350424800000, 33.44],\r\n          [1350511200000, 33.48],\r\n          [1350597600000, 33.24],\r\n          [1350856800000, 33.49],\r\n          [1350943200000, 33.31],\r\n          [1351029600000, 33.36],\r\n          [1351116000000, 33.40],\r\n          [1351202400000, 34.01],\r\n          [1351638000000, 34.02],\r\n          [1351724400000, 34.36],\r\n          [1351810800000, 34.39],\r\n          [1352070000000, 34.24],\r\n          [1352156400000, 34.39],\r\n          [1352242800000, 33.47],\r\n          [1352329200000, 32.98],\r\n          [1352415600000, 32.90],\r\n          [1352674800000, 32.70],\r\n          [1352761200000, 32.54],\r\n          [1352847600000, 32.23],\r\n          [1352934000000, 32.64],\r\n          [1353020400000, 32.65],\r\n          [1353279600000, 32.92],\r\n          [1353366000000, 32.64],\r\n          [1353452400000, 32.84],\r\n          [1353625200000, 33.40],\r\n          [1353884400000, 33.30],\r\n          [1353970800000, 33.18],\r\n          [1354057200000, 33.88],\r\n          [1354143600000, 34.09],\r\n          [1354230000000, 34.61],\r\n          [1354489200000, 34.70],\r\n          [1354575600000, 35.30],\r\n          [1354662000000, 35.40],\r\n          [1354748400000, 35.14],\r\n          [1354834800000, 35.48],\r\n          [1355094000000, 35.75],\r\n          [1355180400000, 35.54],\r\n          [1355266800000, 35.96],\r\n          [1355353200000, 35.53],\r\n          [1355439600000, 37.56],\r\n          [1355698800000, 37.42],\r\n          [1355785200000, 37.49],\r\n          [1355871600000, 38.09],\r\n          [1355958000000, 37.87],\r\n          [1356044400000, 37.71],\r\n          [1356303600000, 37.53],\r\n          [1356476400000, 37.55],\r\n          [1356562800000, 37.30],\r\n          [1356649200000, 36.90],\r\n          [1356908400000, 37.68],\r\n          [1357081200000, 38.34],\r\n          [1357167600000, 37.75],\r\n          [1357254000000, 38.13],\r\n          [1357513200000, 37.94],\r\n          [1357599600000, 38.14],\r\n          [1357686000000, 38.66],\r\n          [1357772400000, 38.62],\r\n          [1357858800000, 38.09],\r\n          [1358118000000, 38.16],\r\n          [1358204400000, 38.15],\r\n          [1358290800000, 37.88],\r\n          [1358377200000, 37.73],\r\n          [1358463600000, 37.98],\r\n          [1358809200000, 37.95],\r\n          [1358895600000, 38.25],\r\n          [1358982000000, 38.10],\r\n          [1359068400000, 38.32],\r\n          [1359327600000, 38.24],\r\n          [1359414000000, 38.52],\r\n          [1359500400000, 37.94],\r\n          [1359586800000, 37.83],\r\n          [1359673200000, 38.34],\r\n          [1359932400000, 38.10],\r\n          [1360018800000, 38.51],\r\n          [1360105200000, 38.40],\r\n          [1360191600000, 38.07],\r\n          [1360278000000, 39.12],\r\n          [1360537200000, 38.64],\r\n          [1360623600000, 38.89],\r\n          [1360710000000, 38.81],\r\n          [1360796400000, 38.61],\r\n          [1360882800000, 38.63],\r\n          [1361228400000, 38.99],\r\n          [1361314800000, 38.77],\r\n          [1361401200000, 38.34],\r\n          [1361487600000, 38.55],\r\n          [1361746800000, 38.11],\r\n          [1361833200000, 38.59],\r\n          [1361919600000, 39.60],\r\n        ],\r\n      }],\r\n      chartOptions: {\r\n        chart: {\r\n          toolbar: {\r\n            show: false,\r\n          }\r\n        },\r\n        annotations: {\r\n          yaxis: [{\r\n            y: 30,\r\n            borderColor: '#999',\r\n            label: {\r\n              show: true,\r\n              text: 'Support',\r\n              style: {\r\n                color: '#fff',\r\n                background: '#00E396',\r\n              },\r\n            },\r\n          }],\r\n          xaxis: [{\r\n            x: new Date('14 Nov 2012').getTime(),\r\n            borderColor: '#999',\r\n            yAxisIndex: 0,\r\n            label: {\r\n              show: true,\r\n              text: 'Rally',\r\n              style: {\r\n                color: '#fff',\r\n                background: '#775DD0',\r\n              },\r\n            },\r\n          }],\r\n        },\r\n        dataLabels: {\r\n          enabled: false,\r\n        },\r\n\r\n        markers: {\r\n          size: 0,\r\n          style: 'hollow',\r\n        },\r\n        xaxis: {\r\n          type: 'datetime',\r\n          min: new Date('01 Mar 2012').getTime(),\r\n          tickAmount: 6,\r\n        },\r\n        tooltip: {\r\n          x: {\r\n            format: 'dd MMM yyyy',\r\n          },\r\n        },\r\n        fill: {\r\n          type: 'gradient',\r\n          gradient: {\r\n            shadeIntensity: 1,\r\n            opacityFrom: 0.7,\r\n            opacityTo: 0.9,\r\n            stops: [0, 100],\r\n          },\r\n        },\r\n      },\r\n}\r\n// start::area with negative values\r\nexport const negativeArea = {\r\n    series: [{\r\n        name: 'north',\r\n        data: [{\r\n            x: 1996,\r\n            y: 322,\r\n          },\r\n          {\r\n            x: 1997,\r\n            y: 324,\r\n          },\r\n          {\r\n            x: 1998,\r\n            y: 329,\r\n          },\r\n          {\r\n            x: 1999,\r\n            y: 342,\r\n          },\r\n          {\r\n            x: 2000,\r\n            y: 348,\r\n          },\r\n          {\r\n            x: 2001,\r\n            y: 334,\r\n          },\r\n          {\r\n            x: 2002,\r\n            y: 325,\r\n          },\r\n          {\r\n            x: 2003,\r\n            y: 316,\r\n          },\r\n          {\r\n            x: 2004,\r\n            y: 318,\r\n          },\r\n          {\r\n            x: 2005,\r\n            y: 330,\r\n          },\r\n          {\r\n            x: 2006,\r\n            y: 355,\r\n          },\r\n          {\r\n            x: 2007,\r\n            y: 366,\r\n          },\r\n          {\r\n            x: 2008,\r\n            y: 337,\r\n          },\r\n          {\r\n            x: 2009,\r\n            y: 352,\r\n          },\r\n          {\r\n            x: 2010,\r\n            y: 377,\r\n          },\r\n          {\r\n            x: 2011,\r\n            y: 383,\r\n          },\r\n          {\r\n            x: 2012,\r\n            y: 344,\r\n          },\r\n          {\r\n            x: 2013,\r\n            y: 366,\r\n          },\r\n          {\r\n            x: 2014,\r\n            y: 389,\r\n          },\r\n          {\r\n            x: 2015,\r\n            y: 334,\r\n          },\r\n        ],\r\n      }, {\r\n        name: 'south',\r\n        data: [\r\n\r\n          {\r\n            x: 1996,\r\n            y: 162,\r\n          },\r\n          {\r\n            x: 1997,\r\n            y: 90,\r\n          },\r\n          {\r\n            x: 1998,\r\n            y: 50,\r\n          },\r\n          {\r\n            x: 1999,\r\n            y: 77,\r\n          },\r\n          {\r\n            x: 2000,\r\n            y: 35,\r\n          },\r\n          {\r\n            x: 2001,\r\n            y: -45,\r\n          },\r\n          {\r\n            x: 2002,\r\n            y: -88,\r\n          },\r\n          {\r\n            x: 2003,\r\n            y: -120,\r\n          },\r\n          {\r\n            x: 2004,\r\n            y: -156,\r\n          },\r\n          {\r\n            x: 2005,\r\n            y: -123,\r\n          },\r\n          {\r\n            x: 2006,\r\n            y: -88,\r\n          },\r\n          {\r\n            x: 2007,\r\n            y: -66,\r\n          },\r\n          {\r\n            x: 2008,\r\n            y: -45,\r\n          },\r\n          {\r\n            x: 2009,\r\n            y: -29,\r\n          },\r\n          {\r\n            x: 2010,\r\n            y: -45,\r\n          },\r\n          {\r\n            x: 2011,\r\n            y: -88,\r\n          },\r\n          {\r\n            x: 2012,\r\n            y: -132,\r\n          },\r\n          {\r\n            x: 2013,\r\n            y: -146,\r\n          },\r\n          {\r\n            x: 2014,\r\n            y: -169,\r\n          },\r\n          {\r\n            x: 2015,\r\n            y: -184,\r\n          },\r\n        ],\r\n      }],\r\n      chartOptions: {\r\n        chart: {\r\n          toolbar: {\r\n            show: false,\r\n          }\r\n        },\r\n        dataLabels: {\r\n          enabled: false,\r\n        },\r\n        stroke: {\r\n          curve: 'straight',\r\n        },\r\n        xaxis: {\r\n          type: 'datetime',\r\n          axisBorder: {\r\n            show: false,\r\n          },\r\n          axisTicks: {\r\n            show: false,\r\n          },\r\n        },\r\n        yaxis: {\r\n          tickAmount: 4,\r\n          floating: false,\r\n\r\n          labels: {\r\n            style: {\r\n              color: '#8e8da4',\r\n            },\r\n            offsetY: -7,\r\n            offsetX: 0,\r\n          },\r\n          axisBorder: {\r\n            show: false,\r\n          },\r\n          axisTicks: {\r\n            show: false,\r\n          },\r\n        },\r\n        fill: {\r\n          opacity: 0.5,\r\n        },\r\n        tooltip: {\r\n          x: {\r\n            format: 'yyyy',\r\n          },\r\n          fixed: {\r\n            enabled: false,\r\n            position: 'topRight',\r\n          },\r\n        },\r\n        grid: {\r\n          yaxis: {\r\n            lines: {\r\n              offsetX: -30,\r\n            },\r\n          },\r\n          padding: {\r\n            left: 20,\r\n          },\r\n        },\r\n      },\r\n}\r\n\r\n// start::stackedArea\r\nexport const stackedArea = {\r\n\r\n    chartOptions: {\r\n      chart: {\r\n        toolbar: {\r\n          show: false,\r\n        },\r\n        stacked: true,\r\n        events: {\r\n          selection: function (chart, e) {\r\n            console.log(new Date(e.xaxis.min))\r\n          },\r\n        },\r\n      },\r\n      colors: ['#008FFB', '#00E396', '#CED4DC'],\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      series: [{\r\n        name: 'South',\r\n        data: generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 20, {\r\n          min: 10,\r\n          max: 60,\r\n        }),\r\n      },\r\n      {\r\n        name: 'North',\r\n        data: generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 20, {\r\n          min: 10,\r\n          max: 20,\r\n        }),\r\n      },\r\n      {\r\n        name: 'Central',\r\n        data: generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 20, {\r\n          min: 10,\r\n          max: 15,\r\n        }),\r\n      },\r\n    ],\r\n      stroke: {\r\n        curve: 'smooth',\r\n      },\r\n      fill: {\r\n        type: 'gradient',\r\n        gradient: {\r\n          opacityFrom: 0.6,\r\n          opacityTo: 0.8,\r\n        },\r\n      },\r\n      legend: {\r\n        position: 'top',\r\n        horizontalAlign: 'center',\r\n      },\r\n      xaxis: {\r\n        type: 'datetime',\r\n      },\r\n    },\r\n\r\n}\r\n\r\nexport const nullAreaChart = {\r\n    series: [{\r\n        name: 'Network',\r\n        data: [{\r\n            x: 'Dec 23 2017',\r\n            y: null,\r\n          },\r\n          {\r\n            x: 'Dec 24 2017',\r\n            y: 44,\r\n          },\r\n          {\r\n            x: 'Dec 25 2017',\r\n            y: 31,\r\n          },\r\n          {\r\n            x: 'Dec 26 2017',\r\n            y: 38,\r\n          },\r\n          {\r\n            x: 'Dec 27 2017',\r\n            y: null,\r\n          },\r\n          {\r\n            x: 'Dec 28 2017',\r\n            y: 32,\r\n          },\r\n          {\r\n            x: 'Dec 29 2017',\r\n            y: 55,\r\n          },\r\n          {\r\n            x: 'Dec 30 2017',\r\n            y: 51,\r\n          },\r\n          {\r\n            x: 'Dec 31 2017',\r\n            y: 67,\r\n          },\r\n          {\r\n            x: 'Jan 01 2018',\r\n            y: 22,\r\n          },\r\n          {\r\n            x: 'Jan 02 2018',\r\n            y: 34,\r\n          },\r\n          {\r\n            x: 'Jan 03 2018',\r\n            y: null,\r\n          },\r\n          {\r\n            x: 'Jan 04 2018',\r\n            y: null,\r\n          },\r\n          {\r\n            x: 'Jan 05 2018',\r\n            y: 11,\r\n          },\r\n          {\r\n            x: 'Jan 06 2018',\r\n            y: 4,\r\n          },\r\n          {\r\n            x: 'Jan 07 2018',\r\n            y: 15,\r\n          },\r\n          {\r\n            x: 'Jan 08 2018',\r\n            y: null,\r\n          },\r\n          {\r\n            x: 'Jan 09 2018',\r\n            y: 9,\r\n          },\r\n          {\r\n            x: 'Jan 10 2018',\r\n            y: 34,\r\n          },\r\n          {\r\n            x: 'Jan 11 2018',\r\n            y: null,\r\n          },\r\n          {\r\n            x: 'Jan 12 2018',\r\n            y: null,\r\n          },\r\n          {\r\n            x: 'Jan 13 2018',\r\n            y: 13,\r\n          },\r\n          {\r\n            x: 'Jan 14 2018',\r\n            y: null,\r\n          },\r\n        ],\r\n      }],\r\n      chartOptions: {\r\n        chart: {\r\n          toolbar: {\r\n            show: false,\r\n          },\r\n          animations: {\r\n            enabled: false,\r\n          },\r\n          zoom: {\r\n            enabled: false,\r\n          },\r\n        },\r\n        dataLabels: {\r\n          enabled: false,\r\n        },\r\n        stroke: {\r\n          curve: 'straight',\r\n        },\r\n\r\n        fill: {\r\n          opacity: 0.8,\r\n          type: 'pattern',\r\n          pattern: {\r\n            enabled: true,\r\n            style: ['verticalLines', 'horizontalLines'],\r\n            width: 5,\r\n            depth: 6,\r\n          },\r\n        },\r\n        markers: {\r\n          size: 5,\r\n          hover: {\r\n            size: 9,\r\n          },\r\n        },\r\n        title: {\r\n          text: '',\r\n        },\r\n        tooltip: {\r\n          intersect: true,\r\n          shared: false,\r\n        },\r\n        theme: {\r\n          palette: 'palette1',\r\n        },\r\n        xaxis: {\r\n          type: 'datetime',\r\n        },\r\n        yaxis: {\r\n          title: {\r\n            text: 'Bytes Received',\r\n          },\r\n        },\r\n      },\r\n}\r\n\r\n// start::basic bar chart\r\nexport const basicBarChart = {\r\n    series: [{\r\n        data: [400, 430, 448, 470, 540, 580, 690, 1100, 1200, 1380],\r\n      }],\r\n      chartOptions: {\r\n        chart: {\r\n          toolbar: {\r\n            show: false,\r\n          }\r\n        },\r\n        plotOptions: {\r\n          bar: {\r\n            horizontal: true,\r\n            endingShape: 'rounded',\r\n          },\r\n        },\r\n        dataLabels: {\r\n          enabled: false,\r\n        },\r\n        xaxis: {\r\n          categories: ['South Korea', 'Canada', 'United Kingdom', 'Netherlands', 'Italy', 'France', 'Japan',\r\n            'United States', 'China', 'Germany',\r\n          ],\r\n        },\r\n      },\r\n}\r\n\r\n// start::groupedBar\r\nexport const groupedBar = {\r\n  series: [{\r\n    data: [44, 55, 41, 64, 22, 43, 21],\r\n  }, {\r\n    data: [53, 32, 33, 52, 13, 44, 32],\r\n  }],\r\n  chartOptions: {\r\n    chart: {\r\n      toolbar: {\r\n        show: false,\r\n      }\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n        dataLabels: {\r\n          position: 'top',\r\n        },\r\n        endingShape: 'rounded',\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: true,\r\n      offsetX: -6,\r\n      style: {\r\n        fontSize: '12px',\r\n        colors: ['#fff'],\r\n      },\r\n    },\r\n    stroke: {\r\n      show: true,\r\n      width: 1,\r\n      colors: ['#fff'],\r\n    },\r\n\r\n    xaxis: {\r\n      categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007],\r\n    },\r\n  },\r\n}\r\n\r\n// start::stackedbar\r\nexport const stackedbar = {\r\n  series: [{\r\n    name: 'Marine Sprite',\r\n    data: [44, 55, 41, 37, 22, 43, 21],\r\n  }, {\r\n    name: 'Striking Calf',\r\n    data: [53, 32, 33, 52, 13, 43, 32],\r\n  }, {\r\n    name: 'Tank Picture',\r\n    data: [12, 17, 11, 9, 15, 11, 20],\r\n  }, {\r\n    name: 'Bucket Slope',\r\n    data: [9, 7, 5, 8, 6, 9, 4],\r\n  }, {\r\n    name: 'Reborn Kid',\r\n    data: [25, 12, 19, 32, 25, 24, 10],\r\n  }],\r\n  chartOptions: {\r\n    chart: {\r\n      toolbar:{\r\n        show: false,\r\n      },\r\n      stacked: true,\r\n      stackType: '100%',\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n        endingShape: 'rounded',\r\n      },\r\n\r\n    },\r\n    stroke: {\r\n      width: 1,\r\n      colors: ['#fff'],\r\n    },\r\n\r\n    xaxis: {\r\n      categories: [2008, 2009, 2010, 2011, 2012, 2013, 2014],\r\n    },\r\n\r\n    tooltip: {\r\n      y: {\r\n        formatter: function (val) {\r\n          return val + 'K'\r\n        },\r\n      },\r\n    },\r\n    fill: {\r\n      opacity: 1,\r\n\r\n    },\r\n\r\n    legend: {\r\n      position: 'top',\r\n      horizontalAlign: 'left',\r\n      offsetX: 40,\r\n    },\r\n  },\r\n}\r\n\r\n// start::negativeBar\r\nexport const negativeBar = {\r\n    series: [{\r\n      name: 'Males',\r\n      data: [0.4, 0.65, 0.76, 0.88, 1.5, 2.1, 2.9, 3.8, 3.9, 4.2, 4, 4.3, 4.1, 4.2, 4.5,\r\n        3.9, 3.5, 3,\r\n      ],\r\n    },\r\n    {\r\n      name: 'Females',\r\n      data: [-0.8, -1.05, -1.06, -1.18, -1.4, -2.2, -2.85, -3.7, -3.96, -4.22, -4.3, -4.4,\r\n        -4.1, -4, -4.1, -3.4, -3.1, -2.8,\r\n      ],\r\n    },\r\n  ],\r\n  chartOptions: {\r\n    chart: {\r\n      toolbar:{\r\n        show: false,\r\n      },\r\n      stacked: true,\r\n    },\r\n    colors: ['#008FFB', '#FF4560'],\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n        barHeight: '80%',\r\n        endingShape: 'rounded',\r\n\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    stroke: {\r\n      width: 1,\r\n      colors: ['#fff'],\r\n    },\r\n\r\n    grid: {\r\n      xaxis: {\r\n        showLines: false,\r\n      },\r\n    },\r\n    yaxis: {\r\n      min: -5,\r\n      max: 5,\r\n      title: {\r\n        // text: 'Age',\r\n      },\r\n    },\r\n    tooltip: {\r\n      shared: false,\r\n      x: {\r\n        formatter: function (val) {\r\n          return val\r\n        },\r\n      },\r\n      y: {\r\n        formatter: function (val) {\r\n          return Math.abs(val) + '%'\r\n        },\r\n      },\r\n    },\r\n\r\n    xaxis: {\r\n      categories: ['85+', '80-84', '75-79', '70-74', '65-69', '60-64', '55-59', '50-54',\r\n        '45-49', '40-44', '35-39', '30-34', '25-29', '20-24', '15-19', '10-14', '5-9',\r\n        '0-4',\r\n      ],\r\n      title: {\r\n        text: 'Percent',\r\n      },\r\n      labels: {\r\n        formatter: function (val) {\r\n          return Math.abs(Math.round(val)) + '%'\r\n        },\r\n      },\r\n    },\r\n},\r\n}\r\n\r\n// start::customDataLabelBar\r\nexport const customDataLabelBar = {\r\n  series: [{\r\n    data: [400, 430, 448, 470, 540, 580, 690, 1100, 1200, 1380],\r\n  }],\r\n  chartOptions: {\r\n    chart:{\r\n      toolbar: {\r\n        show: false,\r\n      }\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        barHeight: '100%',\r\n        distributed: true,\r\n        horizontal: true,\r\n        dataLabels: {\r\n          position: 'bottom',\r\n        },\r\n        endingShape: 'rounded',\r\n      },\r\n    },\r\n    colors: ['#33b2df', '#546E7A', '#d4526e', '#13d8aa', '#A5978B', '#2b908f', '#f9a3a4', '#90ee7e',\r\n      '#f48024', '#69d2e7',\r\n    ],\r\n    dataLabels: {\r\n      enabled: true,\r\n      textAnchor: 'start',\r\n      style: {\r\n        colors: ['#fff'],\r\n      },\r\n      formatter: function (val, opt) {\r\n        return opt.w.globals.labels[opt.dataPointIndex] + ':  ' + val\r\n      },\r\n      offsetX: 0,\r\n      dropShadow: {\r\n        enabled: true,\r\n      },\r\n    },\r\n\r\n    stroke: {\r\n      width: 1,\r\n      colors: ['#fff'],\r\n    },\r\n    xaxis: {\r\n      categories: ['South Korea', 'Canada', 'United Kingdom', 'Netherlands', 'Italy', 'France', 'Japan',\r\n        'United States', 'China', 'India',\r\n      ],\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        show: false,\r\n      },\r\n    },\r\n    // title: {\r\n    //     text: 'Custom DataLabels',\r\n    //     align: 'center',\r\n    //     floating: true\r\n    // },\r\n    // subtitle: {\r\n    //     text: 'Category Names as DataLabels inside bars',\r\n    //     align: 'center',\r\n    // },\r\n    tooltip: {\r\n      theme: 'dark',\r\n      x: {\r\n        show: false,\r\n      },\r\n      y: {\r\n        title: {\r\n          formatter: function () {\r\n            return ''\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n}\r\n\r\n// start::PatternedBar\r\nexport const patternedBar = {\r\n  series: [{\r\n    name: 'Marine Sprite',\r\n    data: [44, 55, 41, 37, 22, 43, 21],\r\n  }, {\r\n    name: 'Striking Calf',\r\n    data: [53, 32, 33, 52, 13, 43, 32],\r\n  }, {\r\n    name: 'Tank Picture',\r\n    data: [12, 17, 11, 9, 15, 11, 20],\r\n  }, {\r\n    name: 'Bucket Slope',\r\n    data: [9, 7, 5, 8, 6, 9, 4],\r\n  }],\r\n  chartOptions: {\r\n    chart: {\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      stacked: true,\r\n      shadow: {\r\n        enabled: true,\r\n        blur: 1,\r\n        opacity: 0.5,\r\n      },\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: true,\r\n        barHeight: '60%',\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    stroke: {\r\n      width: 2,\r\n    },\r\n\r\n    xaxis: {\r\n      categories: [2008, 2009, 2010, 2011, 2012, 2013, 2014],\r\n    },\r\n    yaxis: {\r\n\r\n    },\r\n    tooltip: {\r\n      shared: false,\r\n      y: {\r\n        formatter: function (val) {\r\n          return val + 'K'\r\n        },\r\n      },\r\n    },\r\n    fill: {\r\n      type: 'pattern',\r\n      opacity: 1,\r\n      pattern: {\r\n        style: ['circles', 'slantedLines', 'verticalLines', 'horizontalLines'], // string or array of strings\r\n\r\n      },\r\n    },\r\n    states: {\r\n      hover: {\r\n        filter: 'none',\r\n      },\r\n    },\r\n    legend: {\r\n      position: 'top',\r\n    },\r\n  },\r\n}\r\n\r\n// start::basicColumn-chart\r\nexport const basicColumnChart = {\r\n  series: [{\r\n    name: 'Net Profit',\r\n    data: [44, 55, 57, 56, 61, 58, 63, 60, 66],\r\n  }, {\r\n    name: 'Revenue',\r\n    data: [76, 85, 101, 98, 87, 105, 91, 114, 94],\r\n  }, {\r\n    name: 'Free Cash Flow',\r\n    data: [35, 41, 36, 26, 45, 48, 52, 53, 41],\r\n  }],\r\n  chartOptions: {\r\n    chart:{\r\n      toolbar: {\r\n        show: false,\r\n      }\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: false,\r\n        columnWidth: '55%',\r\n        endingShape: 'rounded',\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    stroke: {\r\n      show: true,\r\n      width: 2,\r\n      colors: ['transparent'],\r\n    },\r\n\r\n    xaxis: {\r\n      categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct'],\r\n    },\r\n    yaxis: {\r\n      title: {\r\n        text: '$ (thousands)',\r\n      },\r\n    },\r\n    fill: {\r\n      opacity: 1,\r\n\r\n    },\r\n    tooltip: {\r\n      y: {\r\n        formatter: function (val) {\r\n          return '$ ' + val + ' thousands'\r\n        },\r\n      },\r\n    },\r\n    colors: ['#62549c', '#7566b5', '#7d6cbb'],\r\n  },\r\n}\r\n\r\n// start::columnDataLabels\r\n\r\nexport const columnDataLabels = {\r\n  series: [{\r\n    name: 'Inflation',\r\n    data: [2.3, 3.1, 4.0, 10.1, 4.0, 3.6, 3.2, 2.3, 1.4, 0.8, 0.5, 0.2],\r\n  }],\r\n  chartOptions: {\r\n    chart: {\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n      height: 350,\r\n      type: 'bar',\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        dataLabels: {\r\n          position: 'top', // top, center, bottom\r\n        },\r\n        endingShape: 'rounded',\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: true,\r\n      formatter: function (val) {\r\n        return val + '%'\r\n      },\r\n      offsetY: -20,\r\n      style: {\r\n        fontSize: '12px',\r\n        colors: ['#304758'],\r\n      },\r\n    },\r\n\r\n    xaxis: {\r\n      categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n      position: 'top',\r\n      labels: {\r\n        offsetY: -18,\r\n\r\n      },\r\n      axisBorder: {\r\n        show: false,\r\n      },\r\n      axisTicks: {\r\n        show: false,\r\n      },\r\n      crosshairs: {\r\n        fill: {\r\n          type: 'gradient',\r\n          gradient: {\r\n            colorFrom: '#D8E3F0',\r\n            colorTo: '#BED1E6',\r\n            stops: [0, 100],\r\n            opacityFrom: 0.4,\r\n            opacityTo: 0.5,\r\n          },\r\n        },\r\n      },\r\n      tooltip: {\r\n        enabled: true,\r\n        offsetY: -35,\r\n\r\n      },\r\n    },\r\n    fill: {\r\n      gradient: {\r\n        shade: 'light',\r\n        type: 'horizontal',\r\n        shadeIntensity: 0.25,\r\n        gradientToColors: undefined,\r\n        inverseColors: true,\r\n        opacityFrom: 1,\r\n        opacityTo: 1,\r\n        stops: [50, 0, 100, 100],\r\n      },\r\n    },\r\n    yaxis: {\r\n      axisBorder: {\r\n        show: false,\r\n      },\r\n      axisTicks: {\r\n        show: false,\r\n      },\r\n      labels: {\r\n        show: false,\r\n        formatter: function (val) {\r\n          return val + '%'\r\n        },\r\n      },\r\n\r\n    },\r\n    title: {\r\n      text: 'Monthly Inflation in Argentina, 2002',\r\n      floating: true,\r\n      offsetY: 320,\r\n      align: 'center',\r\n      style: {\r\n        color: '#444',\r\n      },\r\n    },\r\n  },\r\n}\r\n\r\n// start::stackedColumn\r\nexport const stackedColumn = {\r\n  series: [{\r\n    name: 'PRODUCT A',\r\n    data: [44, 55, 41, 67, 22, 43, 21, 49],\r\n  }, {\r\n    name: 'PRODUCT B',\r\n    data: [13, 23, 20, 8, 13, 27, 33, 12],\r\n  }, {\r\n    name: 'PRODUCT C',\r\n    data: [11, 17, 15, 15, 21, 14, 15, 13],\r\n  }],\r\n  chartOptions: {\r\n    chart: {\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n      stacked: true,\r\n      stackType: '100%',\r\n    },\r\n    responsive: [{\r\n      breakpoint: 480,\r\n      options: {\r\n        legend: {\r\n          position: 'bottom',\r\n          offsetX: -10,\r\n          offsetY: 0,\r\n        },\r\n      },\r\n    }],\r\n    xaxis: {\r\n      categories: ['2011 Q1', '2011 Q2', '2011 Q3', '2011 Q4', '2012 Q1', '2012 Q2',\r\n        '2012 Q3', '2012 Q4',\r\n      ],\r\n    },\r\n    fill: {\r\n      opacity: 1,\r\n    },\r\n\r\n    legend: {\r\n      position: 'top',\r\n    },\r\n  },\r\n}\r\n\r\n// start::negativeColumn\r\nexport const negativeColumn = {\r\n  series: [{\r\n    name: 'Cash Flow',\r\n    data: [1.45, 5.42, 5.9, -0.42, -12.6, -18.1, -18.2, -14.16, -11.1, -6.09, 0.34, 3.88, 13.07,\r\n      5.8, 2, 7.37, 8.1, 13.57, 15.75, 17.1, 19.8, -27.03, -54.4, -47.2, -43.3, -18.6, -48.6, -41.1, -39.6, -37.6, -29.4, -21.4, -2.4,\r\n    ],\r\n  }],\r\n  chartOptions: {\r\n    chart: {\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        colors: {\r\n          ranges: [{\r\n            from: -100,\r\n            to: -46,\r\n            color: '#F15B46',\r\n          }, {\r\n            from: -45,\r\n            to: 0,\r\n            color: '#FEB019',\r\n          }],\r\n        },\r\n        columnWidth: '80%',\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    yaxis: {\r\n      title: {\r\n        text: 'Growth',\r\n      },\r\n      labels: {\r\n        formatter: function (y) {\r\n          return y.toFixed(0) + '%'\r\n        },\r\n      },\r\n    },\r\n    xaxis: {\r\n      type: 'datetime',\r\n      categories: [\r\n        '2011-01-01', '2011-02-01', '2011-03-01', '2011-04-01', '2011-05-01', '2011-06-01',\r\n        '2011-07-01', '2011-08-01', '2011-09-01', '2011-10-01', '2011-11-01', '2011-12-01',\r\n        '2012-01-01', '2012-02-01', '2012-03-01', '2012-04-01', '2012-05-01', '2012-06-01',\r\n        '2012-07-01', '2012-08-01', '2012-09-01', '2012-10-01', '2012-11-01', '2012-12-01',\r\n        '2013-01-01', '2013-02-01', '2013-03-01', '2013-04-01', '2013-05-01', '2013-06-01',\r\n        '2013-07-01', '2013-08-01', '2013-09-01',\r\n      ],\r\n      labels: {\r\n        rotate: -90,\r\n      },\r\n    },\r\n  },\r\n}\r\n\r\n// start::distributedColumnChart\r\nexport const distributedColumnChart = {\r\n  chartOptions: {\r\n    chart: {\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n      height: 350,\r\n      type: 'bar',\r\n\r\n  },\r\n  colors: ['#008FFB', '#00E396', '#FEB019', '#FF4560', '#775DD0', '#546E7A', '#26a69a', '#D10CE8'],\r\n  plotOptions: {\r\n      bar: {\r\n          columnWidth: '45%',\r\n          distributed: true,\r\n          endingShape: 'rounded',\r\n      },\r\n  },\r\n  dataLabels: {\r\n      enabled: false,\r\n  },\r\n  series: [{\r\n      data: [21, 22, 10, 28, 16, 21, 13, 30],\r\n  }],\r\n  xaxis: {\r\n      categories: ['John', 'Joe', 'Jake', 'Amber', 'Peter', 'Mary', 'David', 'Lily'],\r\n      labels: {\r\n          style: {\r\n              colors: ['#008FFB', '#00E396', '#FEB019', '#FF4560', '#775DD0', '#546E7A', '#26a69a', '#D10CE8'],\r\n              fontSize: '14px',\r\n          },\r\n      },\r\n  },\r\n\r\n  },\r\n\r\n}\r\n\r\n// start::basicLineChart\r\nexport const basicLineChart = {\r\n\r\n    series: [{\r\n        name: 'Desktops',\r\n        data: [10, 41, 35, 51, 49, 62, 69, 91, 148],\r\n    }],\r\n    chartOptions: {\r\n      chart: {\r\n            height: 350,\r\n            zoom: {\r\n                enabled: false,\r\n            },\r\n        },\r\n        dataLabels: {\r\n            enabled: false,\r\n        },\r\n        stroke: {\r\n            curve: 'straight',\r\n        },\r\n        title: {\r\n            text: 'Product Trends by Month',\r\n            align: 'left',\r\n        },\r\n        grid: {\r\n            row: {\r\n                colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n                opacity: 0.5,\r\n            },\r\n        },\r\n        xaxis: {\r\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'],\r\n        },\r\n    },\r\n  }\r\n\r\n// start::lineChartWIthDataLabel\r\nexport const lineChartWIthDataLabel = {\r\n    series: [\r\n      {\r\n        name: 'High - 2013',\r\n        data: [28, 29, 33, 36, 32, 32, 33],\r\n      },\r\n      {\r\n        name: 'Low - 2013',\r\n        data: [12, 11, 14, 18, 17, 13, 13],\r\n      },\r\n    ],\r\n    chartOptions: {\r\n      chart: {\r\n        shadow: {\r\n          enabled: true,\r\n          color: '#000',\r\n          top: 18,\r\n          left: 7,\r\n          blur: 10,\r\n          opacity: 1,\r\n        },\r\n        toolbar: {\r\n          show: false,\r\n        },\r\n      },\r\n      colors: ['#77B6EA', '#545454'],\r\n      dataLabels: {\r\n        enabled: true,\r\n      },\r\n      stroke: {\r\n        curve: 'smooth',\r\n      },\r\n\r\n      grid: {\r\n        borderColor: '#e7e7e7',\r\n        row: {\r\n          colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\r\n          opacity: 0.5,\r\n        },\r\n      },\r\n      markers: {\r\n\r\n        size: 6,\r\n      },\r\n      xaxis: {\r\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n        title: {\r\n          text: 'Month',\r\n        },\r\n      },\r\n      yaxis: {\r\n        title: {\r\n          text: 'Temperature',\r\n        },\r\n        min: 5,\r\n        max: 40,\r\n      },\r\n      legend: {\r\n        position: 'top',\r\n        horizontalAlign: 'right',\r\n        floating: true,\r\n        offsetY: -25,\r\n        offsetX: -5,\r\n      },\r\n    },\r\n}\r\n\r\nexport const gradientLineChart = {\r\n  series: [\r\n    {\r\n      name: 'Income',\r\n      data: [14, 29, 18, 20, 20, 40, 20],\r\n    },\r\n    {\r\n      name: 'Outcome',\r\n      data: [12, 20, 14, 25, 17, 35, 30],\r\n    },\r\n  ],\r\n  chartOptions: {\r\n    chart: {\r\n      type: 'line',\r\n      height: 350,\r\n      shadow: {\r\n        enabled: false,\r\n        color: '#bbb',\r\n        top: 3,\r\n        left: 2,\r\n        blur: 3,\r\n        opacity: 1,\r\n      },\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n    },\r\n    colors: ['#5d78ff', '#fbaf0f'],\r\n    stroke: {\r\n      width: 7,\r\n      curve: 'smooth',\r\n    },\r\n\r\n    xaxis: {\r\n      categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n      title: {\r\n        text: '',\r\n      },\r\n      axisBorder: {\r\n          show: false,\r\n        },\r\n    },\r\n    yaxis: {\r\n      title: {\r\n        text: '',\r\n      },\r\n      min: 5,\r\n      max: 40,\r\n    },\r\n    markers: {\r\n      size: 5,\r\n      hover: {\r\n        size: 7,\r\n      },\r\n    },\r\n    legend: {\r\n      position: 'top',\r\n      horizontalAlign: 'right',\r\n      floating: true,\r\n      offsetY: -25,\r\n      offsetX: -5,\r\n    },\r\n  },\r\n}\r\n\r\n// start::dashedLineChart\r\nexport const dashedLineChart = {\r\n  series: [{\r\n    name: 'Session Duration',\r\n    data: [45, 52, 38, 24, 33, 26, 21, 20, 6, 8, 15, 10],\r\n  },\r\n  {\r\n    name: 'Page Views',\r\n    data: [35, 41, 62, 42, 13, 18, 29, 37, 36, 51, 32, 35],\r\n  },\r\n  {\r\n    name: 'Total Visits',\r\n    data: [87, 57, 74, 99, 75, 38, 62, 47, 82, 56, 45, 47],\r\n  },\r\n],\r\nchartOptions: {\r\n  chart: {\r\n    zoom: {\r\n      enabled: false,\r\n    },\r\n  },\r\n  dataLabels: {\r\n    enabled: false,\r\n  },\r\n  stroke: {\r\n    width: [5, 7, 5],\r\n    curve: 'straight',\r\n    dashArray: [0, 8, 5],\r\n  },\r\n\r\n  markers: {\r\n    size: 0,\r\n\r\n    hover: {\r\n      sizeOffset: 6,\r\n    },\r\n  },\r\n  xaxis: {\r\n    categories: ['01 Jan', '02 Jan', '03 Jan', '04 Jan', '05 Jan', '06 Jan', '07 Jan', '08 Jan', '09 Jan',\r\n      '10 Jan', '11 Jan', '12 Jan',\r\n    ],\r\n  },\r\n  tooltip: {\r\n    y: [{\r\n      title: {\r\n        formatter: function (val) {\r\n          return val + ' (mins)'\r\n        },\r\n      },\r\n    }, {\r\n      title: {\r\n        formatter: function (val) {\r\n          return val + ' per session'\r\n        },\r\n      },\r\n    }, {\r\n      title: {\r\n        formatter: function (val) {\r\n          return val\r\n        },\r\n      },\r\n    }],\r\n  },\r\n  grid: {\r\n    borderColor: '#f1f1f1',\r\n  },\r\n},\r\n}\r\n\r\n// start::brushLineChart\r\nexport const brushLineChart = {\r\n  series: [{\r\n    data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 185, {\r\n      min: 30,\r\n      max: 90,\r\n    }),\r\n  }],\r\n  chartOptionsArea: {\r\n    chart: {\r\n      id: 'chartArea',\r\n      toolbar: {\r\n        autoSelected: 'pan',\r\n        show: false,\r\n      },\r\n    },\r\n    colors: ['#546E7A'],\r\n    stroke: {\r\n      width: 3,\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    fill: {\r\n      opacity: 1,\r\n    },\r\n    markers: {\r\n      size: 0,\r\n    },\r\n    xaxis: {\r\n      type: 'datetime',\r\n    },\r\n  },\r\n  chartOptionsBrush: {\r\n    chart: {\r\n      id: 'chartBrush',\r\n      brush: {\r\n        target: 'chartArea',\r\n        enabled: true,\r\n      },\r\n      selection: {\r\n        enabled: true,\r\n        xaxis: {\r\n          min: new Date('19 Jun 2017').getTime(),\r\n          max: new Date('14 Aug 2017').getTime(),\r\n        },\r\n      },\r\n    },\r\n    colors: ['#008FFB'],\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        opacityFrom: 0.91,\r\n        opacityTo: 0.1,\r\n      },\r\n    },\r\n    xaxis: {\r\n      type: 'datetime',\r\n      tooltip: {\r\n        enabled: false,\r\n      },\r\n    },\r\n    yaxis: {\r\n      tickAmount: 2,\r\n    },\r\n  },\r\n\r\n}\r\n\r\n// start::lineColumn\r\nexport const lineColumn = {\r\n    series: [{\r\n      type: 'column',\r\n      data: [440, 505, 414, 671, 227, 413, 201, 352, 752, 320, 257, 160],\r\n    }, {\r\n      type: 'line',\r\n      data: [23, 42, 35, 27, 43, 22, 17, 31, 22, 22, 12, 16],\r\n    }],\r\n    chartOptions: {\r\n      chart:{\r\n        toolbar: {\r\n          show: false,\r\n        }\r\n      },\r\n      stroke: {\r\n        width: [0, 4],\r\n      },\r\n      title: {\r\n        text: '',\r\n      },\r\n      // labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n      labels: ['01 Jan 2001', '02 Jan 2001', '03 Jan 2001', '04 Jan 2001', '05 Jan 2001', '06 Jan 2001',\r\n        '07 Jan 2001', '08 Jan 2001', '09 Jan 2001', '10 Jan 2001', '11 Jan 2001', '12 Jan 2001',\r\n      ],\r\n      xaxis: {\r\n        type: 'datetime',\r\n      },\r\n      yaxis: [{\r\n        title: {\r\n          text: 'Website Blog',\r\n        },\r\n\r\n      }, {\r\n        opposite: true,\r\n        title: {\r\n          text: 'Social Media',\r\n        },\r\n      }],\r\n    },\r\n}\r\n\r\n// start::multipleYxis\r\nexport const multipleYxis = {\r\n  series: [{\r\n    name: 'Income',\r\n    type: 'column',\r\n    data: [1.4, 2, 2.5, 1.5, 2.5, 2.8, 3.8, 4.6],\r\n  }, {\r\n    name: 'Cashflow',\r\n    type: 'column',\r\n    data: [1.1, 3, 3.1, 4, 4.1, 4.9, 6.5, 8.5],\r\n  }, {\r\n    name: 'Revenue',\r\n    type: 'line',\r\n    data: [20, 29, 37, 36, 44, 45, 50, 58],\r\n  }],\r\n  chartOptions: {\r\n    chart: {\r\n      toolbar: {\r\n        show: false,\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n\r\n    stroke: {\r\n      width: [1, 1, 4],\r\n    },\r\n\r\n    xaxis: {\r\n      categories: [2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016],\r\n    },\r\n    yaxis: [{\r\n        axisTicks: {\r\n          show: true,\r\n        },\r\n        axisBorder: {\r\n          show: true,\r\n          color: '#008FFB',\r\n        },\r\n        labels: {\r\n          style: {\r\n            color: '#008FFB',\r\n          },\r\n        },\r\n        title: {\r\n          text: 'Income (thousand crores)',\r\n          style: {\r\n            color: '#008FFB',\r\n          },\r\n        },\r\n        tooltip: {\r\n          enabled: true,\r\n        },\r\n      },\r\n\r\n      {\r\n        seriesName: 'Income',\r\n        opposite: true,\r\n        axisTicks: {\r\n          show: true,\r\n        },\r\n        axisBorder: {\r\n          show: true,\r\n          color: '#00E396',\r\n        },\r\n        labels: {\r\n          style: {\r\n            color: '#00E396',\r\n          },\r\n        },\r\n        title: {\r\n          text: 'Operating Cashflow (thousand crores)',\r\n          style: {\r\n            color: '#00E396',\r\n          },\r\n        },\r\n      },\r\n      {\r\n        seriesName: 'Revenue',\r\n        opposite: true,\r\n        axisTicks: {\r\n          show: true,\r\n        },\r\n        axisBorder: {\r\n          show: true,\r\n          color: '#FEB019',\r\n        },\r\n        labels: {\r\n          style: {\r\n            color: '#FEB019',\r\n          },\r\n        },\r\n        title: {\r\n          text: 'Revenue (thousand crores)',\r\n          style: {\r\n            color: '#FEB019',\r\n          },\r\n        },\r\n      },\r\n    ],\r\n    tooltip: {\r\n      fixed: {\r\n        enabled: true,\r\n        position: 'topLeft', // topRight, topLeft, bottomRight, bottomLeft\r\n        offsetY: 30,\r\n        offsetX: 60,\r\n      },\r\n    },\r\n    legend: {\r\n      horizontalAlign: 'center',\r\n    },\r\n  },\r\n}\r\n\r\n// start::lineArea\r\nexport const lineArea = {\r\n  series: [{\r\n    name: 'TEAM A',\r\n    type: 'area',\r\n    data: [44, 55, 31, 47, 31, 43, 26, 41, 31, 47, 33],\r\n  }, {\r\n    name: 'TEAM B',\r\n    type: 'line',\r\n    data: [55, 69, 45, 61, 43, 54, 37, 52, 44, 61, 43],\r\n  }],\r\n  chartOptions: {\r\n    chart:{\r\n      toolbar: {\r\n        show: false,\r\n      }\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n    },\r\n    fill: {\r\n      type: 'solid',\r\n      opacity: [0.35, 1],\r\n    },\r\n    labels: ['Dec 01', 'Dec 02', 'Dec 03', 'Dec 04', 'Dec 05', 'Dec 06', 'Dec 07', 'Dec 08', 'Dec 09 ',\r\n      'Dec 10', 'Dec 11',\r\n    ],\r\n    markers: {\r\n      size: 0,\r\n    },\r\n    yaxis: [{\r\n        title: {\r\n          text: 'Series A',\r\n        },\r\n      },\r\n      {\r\n        opposite: true,\r\n        title: {\r\n          text: 'Series B',\r\n        },\r\n      },\r\n    ],\r\n    tooltip: {\r\n      shared: true,\r\n      intersect: false,\r\n      y: {\r\n        formatter: function (y) {\r\n          if (typeof y !== 'undefined') {\r\n            return y.toFixed(0) + ' points'\r\n          }\r\n          return y\r\n        },\r\n      },\r\n    },\r\n  },\r\n}\r\n\r\n// start::lineColumnArea\r\nexport const lineColumnArea = {\r\n\r\n  series: [{\r\n    name: 'TEAM A',\r\n    type: 'column',\r\n    data: [23, 11, 22, 27, 13, 22, 37, 21, 44, 22, 30],\r\n  }, {\r\n    name: 'TEAM B',\r\n    type: 'area',\r\n    data: [44, 55, 41, 67, 22, 43, 21, 41, 56, 27, 43],\r\n  }, {\r\n    name: 'TEAM C',\r\n    type: 'line',\r\n    data: [30, 25, 36, 30, 45, 35, 64, 52, 59, 36, 39],\r\n  }],\r\n  chartOptions: {\r\n    chart: {\r\n      toolbar:{\r\n        show: false,\r\n      },\r\n      stacked: false,\r\n    },\r\n    stroke: {\r\n      width: [0, 2, 5],\r\n      curve: 'smooth',\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        columnWidth: '50%',\r\n      },\r\n    },\r\n\r\n    fill: {\r\n      opacity: [0.85, 0.25, 1],\r\n      gradient: {\r\n        inverseColors: false,\r\n        shade: 'light',\r\n        type: 'vertical',\r\n        opacityFrom: 0.85,\r\n        opacityTo: 0.55,\r\n        stops: [0, 100, 100, 100],\r\n      },\r\n    },\r\n    labels: ['01/01/2003', '02/01/2003', '03/01/2003', '04/01/2003', '05/01/2003', '06/01/2003', '07/01/2003',\r\n      '08/01/2003', '09/01/2003', '10/01/2003', '11/01/2003',\r\n    ],\r\n    markers: {\r\n      size: 0,\r\n    },\r\n    xaxis: {\r\n      type: 'datetime',\r\n    },\r\n    yaxis: {\r\n      title: {\r\n        text: 'Points',\r\n      },\r\n      min: 0,\r\n    },\r\n    tooltip: {\r\n      shared: true,\r\n      intersect: false,\r\n      y: {\r\n        formatter: function (y) {\r\n          if (typeof y !== 'undefined') {\r\n            return y.toFixed(0) + ' points'\r\n          }\r\n          return y\r\n        },\r\n      },\r\n    },\r\n  },\r\n}\r\n\r\n// start::simplePie\r\nexport const simplePie = {\r\n  series: [44, 55, 13, 43, 22],\r\n        chartOptions: {\r\n          legend: {\r\n            position: 'bottom',\r\n\r\n        },\r\n          labels: ['Team A', 'Team B', 'Team C', 'Team D', 'Team E'],\r\n          responsive: [{\r\n            breakpoint: 480,\r\n            options: {\r\n              chart: {\r\n                width: 200,\r\n              },\r\n              legend: {\r\n                position: 'bottom',\r\n              },\r\n            },\r\n          }],\r\n        },\r\n}\r\n\r\n// start::simpleDonut\r\nexport const simpleDonut = {\r\n  series: [44, 55, 41, 17, 15],\r\n\r\n  chartOptions: {\r\n    legend: {\r\n      position: 'bottom',\r\n\r\n  },\r\n    responsive: [{\r\n      breakpoint: 480,\r\n      options: {\r\n        chart: {\r\n          width: 200,\r\n        },\r\n        legend: {\r\n          position: 'bottom',\r\n        },\r\n      },\r\n    }],\r\n  },\r\n}\r\n\r\n// start::monochromePie\r\nexport const monochromePie = {\r\n  series: [25, 15, 44, 55, 41, 17],\r\n        chartOptions: {\r\n          legend: {\r\n            position: 'bottom',\r\n          },\r\n          labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n          theme: {\r\n            monochrome: {\r\n              enabled: true,\r\n            },\r\n          },\r\n          title: {\r\n            text: '',\r\n          },\r\n          responsive: [{\r\n            breakpoint: 480,\r\n            options: {\r\n              chart: {\r\n                width: 200,\r\n              },\r\n              legend: {\r\n                position: 'bottom',\r\n              },\r\n            },\r\n          }],\r\n        },\r\n}\r\n\r\n// start::gradientDonut\r\nexport const gradientDonut = {\r\n  series: [44, 55, 41, 17, 15],\r\n  chartOptions: {\r\n    legend: {\r\n      position: 'bottom',\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    fill: {\r\n      type: 'gradient',\r\n    },\r\n    // legend: {\r\n    //   formatter: function (val, opts) {\r\n    //     return val + \" - \" + opts.w.globals.series[opts.seriesIndex]\r\n    //   }\r\n    // },\r\n    responsive: [{\r\n      breakpoint: 480,\r\n      options: {\r\n        chart: {\r\n          width: 200,\r\n        },\r\n        legend: {\r\n          position: 'bottom',\r\n        },\r\n      },\r\n    }],\r\n  },\r\n}\r\n\r\n// start::donutwithPattern\r\nexport const donutwithPattern = {\r\n  series: [44, 55, 41, 17, 15],\r\n        chartOptions: {\r\n          legend: {\r\n            position: 'bottom',\r\n          },\r\n          chart: {\r\n            dropShadow: {\r\n              enabled: true,\r\n              color: '#111',\r\n              top: -1,\r\n              left: 3,\r\n              blur: 3,\r\n              opacity: 0.2,\r\n            },\r\n          },\r\n          stroke: {\r\n            width: 0,\r\n          },\r\n          labels: ['Comedy', 'Action', 'SciFi', 'Drama', 'Horror'],\r\n          dataLabels: {\r\n            dropShadow: {\r\n              blur: 3,\r\n              opacity: 0.8,\r\n            },\r\n          },\r\n          fill: {\r\n            type: 'pattern',\r\n            opacity: 1,\r\n            pattern: {\r\n              enabled: true,\r\n              style: ['verticalLines', 'squares', 'horizontalLines', 'circles', 'slantedLines'],\r\n            },\r\n          },\r\n          states: {\r\n            hover: {\r\n              enabled: false,\r\n            },\r\n          },\r\n          theme: {\r\n            palette: 'palette2',\r\n          },\r\n          title: {\r\n            text: 'Favourite Movie Type',\r\n          },\r\n          responsive: [{\r\n            breakpoint: 480,\r\n            options: {\r\n              chart: {\r\n                width: 200,\r\n              },\r\n              legend: {\r\n                position: 'bottom',\r\n              },\r\n            },\r\n          }],\r\n        },\r\n}\r\n\r\n// start::basicRadar\r\nexport const basicRadar = {\r\n    series: [{\r\n      name: 'Series 1',\r\n      data: [80, 50, 30, 40, 100, 20],\r\n  }],\r\n  chartOptions: {\r\n    chart: {\r\n      toolbar: {\r\n        show: false,\r\n      }\r\n    },\r\n    labels: ['January', 'February', 'March', 'April', 'May', 'June'],\r\n    title: {\r\n        text: '',\r\n    },\r\n  },\r\n}\r\n\r\n// start::radarMultiSeries\r\nexport const radarMultiSeries = {\r\n          series: [{\r\n            name: 'Series 1',\r\n            data: [80, 50, 30, 40, 100, 20],\r\n        }, {\r\n            name: 'Series 2',\r\n            data: [20, 30, 40, 80, 20, 80],\r\n        }, {\r\n            name: 'Series 3',\r\n            data: [44, 76, 78, 13, 43, 10],\r\n        }],\r\n\r\n        chartOptions: {\r\n          chart: {\r\n            toolbar: {\r\n              show: false,\r\n            },\r\n            dropShadow: {\r\n                enabled: true,\r\n                blur: 1,\r\n                left: 1,\r\n                top: 1,\r\n            },\r\n          },\r\n          title: {\r\n              text: '',\r\n          },\r\n          stroke: {\r\n              width: 0,\r\n          },\r\n          fill: {\r\n              opacity: 0.4,\r\n          },\r\n          markers: {\r\n              size: 0,\r\n          },\r\n          labels: ['2011', '2012', '2013', '2014', '2015', '2016'],\r\n        },\r\n}\r\n\r\n// start::radarwithPolygonFill\r\nexport const radarwithPolygonFill = {\r\n        series: [{\r\n          name: 'Series 1',\r\n          data: [20, 100, 40, 30, 50, 80, 33],\r\n      }],\r\n\r\n      chartOptions: {\r\n        chart:{\r\n          toolbar: {\r\n            show: false,\r\n          }\r\n        },\r\n        labels: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n        plotOptions: {\r\n            radar: {\r\n                size: 140,\r\n                polygons: {\r\n                    strokeColor: '#e9e9e9',\r\n                    fill: {\r\n                        colors: ['#f8f8f8', '#fff'],\r\n                    },\r\n                },\r\n            },\r\n          },\r\n          colors: ['#FF4560'],\r\n          markers: {\r\n              size: 4,\r\n              colors: ['#fff'],\r\n              strokeColor: '#FF4560',\r\n              strokeWidth: 2,\r\n          },\r\n          tooltip: {\r\n              y: {\r\n                  formatter: function (val) {\r\n                      return val\r\n                  },\r\n              },\r\n          },\r\n          yaxis: {\r\n              tickAmount: 7,\r\n              labels: {\r\n                  formatter: function (val, i) {\r\n                      if (i % 2 === 0) {\r\n                          return val\r\n                      } else {\r\n                          return ''\r\n                      }\r\n                  },\r\n              },\r\n          },\r\n      },\r\n}\r\n\r\n// start::simpleRadialBar\r\nexport const simpleRadialBar = {\r\n    series: [70],\r\n    chartOptions: {\r\n      plotOptions: {\r\n        radialBar: {\r\n          hollow: {\r\n            size: '70%',\r\n          },\r\n        },\r\n      },\r\n      labels: ['Cricket'],\r\n    },\r\n}\r\n\r\n// start::multipleRadialBar\r\nexport const multipleRadialBar = {\r\n  series: [44, 55, 67, 83],\r\n        chartOptions: {\r\n          plotOptions: {\r\n            radialBar: {\r\n              dataLabels: {\r\n                name: {\r\n                  fontSize: '22px',\r\n                },\r\n                value: {\r\n                  fontSize: '16px',\r\n                },\r\n                total: {\r\n                  show: true,\r\n                  label: 'Total',\r\n                  formatter: function (w) {\r\n                    // By default this function returns the average of all series. The below is just an example to show the use of custom formatter function\r\n                    return 249\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n          labels: ['Apples', 'Oranges', 'Bananas', 'Berries'],\r\n        },\r\n}\r\n\r\n// start::customAngleCircleChart\r\nexport const customAngleCircleChart = {\r\n  series: [76, 67, 61, 90],\r\n        chartOptions: {\r\n          plotOptions: {\r\n            radialBar: {\r\n              offsetY: -10,\r\n              startAngle: 0,\r\n              endAngle: 270,\r\n              hollow: {\r\n                margin: 5,\r\n                size: '30%',\r\n                background: 'transparent',\r\n                image: undefined,\r\n              },\r\n              dataLabels: {\r\n                name: {\r\n                  show: false,\r\n\r\n                },\r\n                value: {\r\n                  show: false,\r\n                },\r\n              },\r\n            },\r\n          },\r\n          colors: ['#1ab7ea', '#0084ff', '#39539E', '#0077B5'],\r\n          labels: ['Vimeo', 'Messenger', 'Facebook', 'LinkedIn'],\r\n          legend: {\r\n            show: true,\r\n            floating: true,\r\n            fontSize: '16px',\r\n            position: 'bottom',\r\n            offsetX: 10,\r\n            offsetY: 10,\r\n            labels: {\r\n                useSeriesColors: true,\r\n            },\r\n            markers: {\r\n                size: 0,\r\n            },\r\n            formatter: function (seriesName, opts) {\r\n                return seriesName + ':  ' + opts.w.globals.series[opts.seriesIndex]\r\n            },\r\n            itemMargin: {\r\n                horizontal: 1,\r\n            },\r\n          },\r\n          responsive: [{\r\n              breakpoint: 480,\r\n              options: {\r\n                  legend: {\r\n                      show: false,\r\n                  },\r\n              },\r\n          }],\r\n        },\r\n}\r\n\r\n// start::gradientRadial\r\nexport const gradientRadial = {\r\n  series: [75],\r\n        chartOptions: {\r\n          chart: {\r\n            toolbar: {\r\n              show: true,\r\n            },\r\n          },\r\n          plotOptions: {\r\n            radialBar: {\r\n              startAngle: -135,\r\n              endAngle: 225,\r\n              hollow: {\r\n                margin: 0,\r\n                size: '70%',\r\n                background: '#fff',\r\n                position: 'front',\r\n                dropShadow: {\r\n                  enabled: true,\r\n                  top: 3,\r\n                  left: 0,\r\n                  blur: 4,\r\n                  opacity: 0.24,\r\n                },\r\n              },\r\n              track: {\r\n                background: '#fff',\r\n                strokeWidth: '67%',\r\n                margin: 0, // margin is in pixels\r\n                dropShadow: {\r\n                  enabled: true,\r\n                  top: -3,\r\n                  left: 0,\r\n                  blur: 4,\r\n                  opacity: 0.35,\r\n                },\r\n              },\r\n\r\n              dataLabels: {\r\n                name: {\r\n                  offsetY: -10,\r\n                  show: true,\r\n                  color: '#888',\r\n                  fontSize: '17px',\r\n                },\r\n                value: {\r\n                  formatter: function (val) {\r\n                    return parseInt(val)\r\n                  },\r\n                  color: '#111',\r\n                  fontSize: '36px',\r\n                  show: true,\r\n                },\r\n              },\r\n            },\r\n          },\r\n          fill: {\r\n            type: 'gradient',\r\n            gradient: {\r\n              shade: 'dark',\r\n              type: 'horizontal',\r\n              shadeIntensity: 0.5,\r\n              gradientToColors: ['#ABE5A1'],\r\n              inverseColors: true,\r\n              opacityFrom: 1,\r\n              opacityTo: 1,\r\n              stops: [0, 100],\r\n            },\r\n          },\r\n          stroke: {\r\n            lineCap: 'round',\r\n          },\r\n          labels: ['Percent'],\r\n        },\r\n}\r\n\r\n// start::strokedangularGauge\r\nexport const strokedangularGauge = {\r\n  series: [67],\r\n        chartOptions: {\r\n          plotOptions: {\r\n            radialBar: {\r\n              startAngle: -135,\r\n              endAngle: 135,\r\n              dataLabels: {\r\n                name: {\r\n                  fontSize: '16px',\r\n                  color: undefined,\r\n                  offsetY: 120,\r\n                },\r\n                value: {\r\n                  offsetY: 76,\r\n                  fontSize: '22px',\r\n                  color: undefined,\r\n                  formatter: function (val) {\r\n                    return val + '%'\r\n                  },\r\n                },\r\n              },\r\n            },\r\n          },\r\n          fill: {\r\n            type: 'gradient',\r\n            gradient: {\r\n              shade: 'dark',\r\n              shadeIntensity: 0.15,\r\n              inverseColors: false,\r\n              opacityFrom: 1,\r\n              opacityTo: 1,\r\n              stops: [0, 50, 65, 91],\r\n            },\r\n          },\r\n          stroke: {\r\n            dashArray: 4,\r\n          },\r\n          labels: ['Median Ratio'],\r\n        },\r\n}\r\n\r\n// start::semiCircleGauge\r\nexport const semiCircleGauge = {\r\n  series: [76],\r\n        chartOptions: {\r\n          plotOptions: {\r\n            radialBar: {\r\n              startAngle: -90,\r\n              endAngle: 90,\r\n              track: {\r\n                background: '#e7e7e7',\r\n                strokeWidth: '97%',\r\n                margin: 5, // margin is in pixels\r\n                shadow: {\r\n                  enabled: true,\r\n                  top: 2,\r\n                  left: 0,\r\n                  color: '#999',\r\n                  opacity: 1,\r\n                  blur: 2,\r\n                },\r\n              },\r\n              dataLabels: {\r\n                name: {\r\n                  show: false,\r\n                },\r\n                value: {\r\n                  offsetY: 15,\r\n                  fontSize: '22px',\r\n                },\r\n              },\r\n            },\r\n          },\r\n          fill: {\r\n            type: 'gradient',\r\n            gradient: {\r\n              shade: 'light',\r\n              shadeIntensity: 0.4,\r\n              inverseColors: false,\r\n              opacityFrom: 1,\r\n              opacityTo: 1,\r\n              stops: [0, 50, 53, 91],\r\n            },\r\n          },\r\n          labels: ['Average Results'],\r\n        },\r\n}\r\n\r\n// start::simpleScatter\r\nexport const simpleScatter = {\r\n\r\n  series: [{\r\n    name: 'SAMPLE A',\r\n    data: [\r\n      [16.4, 5.4],\r\n      [21.7, 2],\r\n      [25.4, 3],\r\n      [19, 2],\r\n      [10.9, 1],\r\n      [13.6, 3.2],\r\n      [10.9, 7.4],\r\n      [10.9, 0],\r\n      [10.9, 8.2],\r\n      [16.4, 0],\r\n      [16.4, 1.8],\r\n      [13.6, 0.3],\r\n      [13.6, 0],\r\n      [29.9, 0],\r\n      [27.1, 2.3],\r\n      [16.4, 0],\r\n      [13.6, 3.7],\r\n      [10.9, 5.2],\r\n      [16.4, 6.5],\r\n      [10.9, 0],\r\n      [24.5, 7.1],\r\n      [10.9, 0],\r\n      [8.1, 4.7],\r\n      [19, 0],\r\n      [21.7, 1.8],\r\n      [27.1, 0],\r\n      [24.5, 0],\r\n      [27.1, 0],\r\n      [29.9, 1.5],\r\n      [27.1, 0.8],\r\n      [22.1, 2],\r\n    ],\r\n  }, {\r\n    name: 'SAMPLE B',\r\n    data: [\r\n      [6.4, 13.4],\r\n      [1.7, 11],\r\n      [5.4, 8],\r\n      [9, 17],\r\n      [1.9, 4],\r\n      [3.6, 12.2],\r\n      [1.9, 14.4],\r\n      [1.9, 9],\r\n      [1.9, 13.2],\r\n      [1.4, 7],\r\n      [6.4, 8.8],\r\n      [3.6, 4.3],\r\n      [1.6, 10],\r\n      [9.9, 2],\r\n      [7.1, 15],\r\n      [1.4, 0],\r\n      [3.6, 13.7],\r\n      [1.9, 15.2],\r\n      [6.4, 16.5],\r\n      [0.9, 10],\r\n      [4.5, 17.1],\r\n      [10.9, 10],\r\n      [0.1, 14.7],\r\n      [9, 10],\r\n      [12.7, 11.8],\r\n      [2.1, 10],\r\n      [2.5, 10],\r\n      [27.1, 10],\r\n      [2.9, 11.5],\r\n      [7.1, 10.8],\r\n      [2.1, 12],\r\n    ],\r\n  }, {\r\n    name: 'SAMPLE C',\r\n    data: [\r\n      [21.7, 3],\r\n      [23.6, 3.5],\r\n      [24.6, 3],\r\n      [29.9, 3],\r\n      [21.7, 20],\r\n      [23, 2],\r\n      [10.9, 3],\r\n      [28, 4],\r\n      [27.1, 0.3],\r\n      [16.4, 4],\r\n      [13.6, 0],\r\n      [19, 5],\r\n      [22.4, 3],\r\n      [24.5, 3],\r\n      [32.6, 3],\r\n      [27.1, 4],\r\n      [29.6, 6],\r\n      [31.6, 8],\r\n      [21.6, 5],\r\n      [20.9, 4],\r\n      [22.4, 0],\r\n      [32.6, 10.3],\r\n      [29.7, 20.8],\r\n      [24.5, 0.8],\r\n      [21.4, 0],\r\n      [21.7, 6.9],\r\n      [28.6, 7.7],\r\n      [15.4, 0],\r\n      [18.1, 0],\r\n      [33.4, 0],\r\n      [16.4, 0],\r\n    ],\r\n  }],\r\n  chartOptions: {\r\n    chart: {\r\n      toolbar:{\r\n        show: false,\r\n      },\r\n      zoom: {\r\n        enabled: true,\r\n        type: 'xy',\r\n      },\r\n    },\r\n    xaxis: {\r\n        tickAmount: 10,\r\n        labels: {\r\n            formatter: function (val) {\r\n                return parseFloat(val).toFixed(1)\r\n            },\r\n        },\r\n    },\r\n    yaxis: {\r\n      tickAmount: 7,\r\n    },\r\n  },\r\n}\r\n\r\n// start::scatterDatetime\r\nexport const scatterDatetime = {\r\n  series: [{\r\n    name: 'TEAM 1',\r\n    data: scatterDatetimeChild(new Date('11 Feb 2017 GMT').getTime(), 20, {\r\n      min: 10,\r\n      max: 60,\r\n    }),\r\n  },\r\n  {\r\n    name: 'TEAM 2',\r\n    data: scatterDatetimeChild(new Date('11 Feb 2017 GMT').getTime(), 20, {\r\n      min: 10,\r\n      max: 60,\r\n    }),\r\n  },\r\n  {\r\n    name: 'TEAM 3',\r\n    data: scatterDatetimeChild(new Date('11 Feb 2017 GMT').getTime(), 30, {\r\n      min: 10,\r\n      max: 60,\r\n    }),\r\n  },\r\n  {\r\n    name: 'TEAM 4',\r\n    data: scatterDatetimeChild(new Date('11 Feb 2017 GMT').getTime(), 10, {\r\n      min: 10,\r\n      max: 60,\r\n    }),\r\n  },\r\n  {\r\n    name: 'TEAM 5',\r\n    data: scatterDatetimeChild(new Date('11 Feb 2017 GMT').getTime(), 30, {\r\n      min: 10,\r\n      max: 60,\r\n    }),\r\n  },\r\n],\r\nchartOptions: {\r\n  chart: {\r\n    toolbar: {\r\n      show: false\r\n    },\r\n    zoom: {\r\n      type: 'xy',\r\n    },\r\n  },\r\n\r\n  dataLabels: {\r\n    enabled: false,\r\n  },\r\n  grid: {\r\n    xaxis: {\r\n      showLines: true,\r\n    },\r\n    yaxis: {\r\n      showLines: true,\r\n    },\r\n  },\r\n  xaxis: {\r\n    type: 'datetime',\r\n\r\n  },\r\n  yaxis: {\r\n    max: 70,\r\n  },\r\n},\r\n}\r\n\r\n// start::spark1\r\nexport const spark1 = {\r\n  series: [{\r\n    name: 'series2',\r\n    data: [47, 45, 54, 38, 56, 24, 65, 31, 37, 39, 62, 51, 35, 41, 35, 27, 93, 53, 61, 27, 54, 43, 19, 46],\r\n  }],\r\n\r\n  chartOptions: {\r\n    chart: {\r\n      sparkline: {\r\n        enabled: true,\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n\r\n      fill: {\r\n        opacity: 0.3,\r\n    },\r\n    stroke: {\r\n      curve: 'straight',\r\n      width: 1,\r\n    },\r\n    grid: {\r\n      show: false,\r\n    },\r\n    xaxis: {\r\n      type: 'datetime',\r\n      categories: ['2018-09-19T00:00:00', '2018-09-19T01:30:00', '2018-09-19T02:30:00',\r\n        '2018-09-19T03:30:00', '2018-09-19T04:30:00', '2018-09-19T05:30:00',\r\n        '2018-09-19T06:30:00', '2018-09-19T07:30:00', '2018-09-19T08:30:00', '2018-09-19T09:30:00', '2018-09-19T10:30:00', '2018-09-19T11:30:00', '2018-09-19T12:30:00',\r\n        '2018-09-19T13:30:00', '2018-09-19T14:30:00', '2018-09-19T15:30:00', '2018-09-19T16:30:00', '2018-09-19T17:30:00', '2018-09-19T18:30:00', '2018-09-19T19:30:00',\r\n        '2018-09-19T20:30:00', '2018-09-19T21:30:00', '2018-09-19T22:30:00', '2018-09-19T23:30:00',\r\n      ],\r\n      labels: {\r\n        show: false,\r\n      },\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        show: false,\r\n      },\r\n      min: 0,\r\n    },\r\n\r\n    colors: ['#DCE6EC'],\r\n    tooltip: {\r\n      enabled: false,\r\n\r\n      x: {\r\n        format: 'dd/MM/yy HH:mm',\r\n      },\r\n\r\n    },\r\n  },\r\n\r\n}\r\n\r\n// spark2\r\nexport const spark2 = {\r\n  series: [{\r\n    name: 'series2',\r\n    data: [47, 45, 54, 38, 56, 24, 65, 31, 37, 39, 62, 51, 35, 41, 35, 27, 93, 53, 61, 27, 54, 43, 19, 46],\r\n  }],\r\n\r\n  chartOptions: {\r\n    chart: {\r\n      type: 'area',\r\n      height: 160,\r\n      sparkline: {\r\n        enabled: true,\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n\r\n    stroke: {\r\n      curve: 'straight',\r\n      width: 1,\r\n    },\r\n    fill: {\r\n        opacity: 0.3,\r\n    },\r\n    series: [{\r\n        data: randomizeArray(sparklineData),\r\n    }],\r\n    yaxis: {\r\n        min: 1,\r\n    },\r\n    colors: ['#639'],\r\n    },\r\n\r\n}\r\n// spark3\r\nexport const spark3 = {\r\n  series: [{\r\n    name: 'series2',\r\n    data: [47, 45, 54, 38, 56, 24, 65, 31, 37, 39, 62, 51, 35, 41, 35, 27, 93, 53, 61, 27, 54, 43, 19, 46],\r\n  }],\r\n\r\n  chartOptions: {\r\n    chart: {\r\n      type: 'area',\r\n      height: 160,\r\n      sparkline: {\r\n        enabled: true,\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n\r\n    stroke: {\r\n      curve: 'straight',\r\n      width: 1,\r\n    },\r\n    fill: {\r\n        opacity: 0.3,\r\n    },\r\n    series: [{\r\n        data: randomizeArray(sparklineData),\r\n    }],\r\n    yaxis: {\r\n        min: 0,\r\n    },\r\n    colors: ['#663399'],\r\n    },\r\n\r\n}\r\n// spark4\r\nexport const spark4 = {\r\n  series: [{\r\n    name: 'series2',\r\n    data: [47, 45, 54, 38, 56, 24, 65, 31, 37, 39, 62, 51, 35, 41, 35, 27, 93, 53, 61, 27, 54, 43, 19, 46],\r\n  }],\r\n\r\n  chartOptions: {\r\n    chart: {\r\n      type: 'line',\r\n      height: 160,\r\n      sparkline: {\r\n        enabled: true,\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    marker: {\r\n      show: false,\r\n    },\r\n    stroke: {\r\n      curve: 'straight',\r\n      width: 1,\r\n    },\r\n    fill: {\r\n        opacity: 1,\r\n    },\r\n    series: [{\r\n        data: randomizeArray(sparklineData),\r\n    }],\r\n    yaxis: {\r\n        min: 0,\r\n    },\r\n\r\n    },\r\n\r\n}\r\n// spark5\r\nexport const spark5 = {\r\n  series: [{\r\n    name: 'series2',\r\n    data: [12, 14, 2, 47, 42, 15, 47, 75, 65, 19, 14],\r\n  }],\r\n\r\n  chartOptions: {\r\n    chart: {\r\n      type: 'line',\r\n      height: 160,\r\n      sparkline: {\r\n        enabled: true,\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    marker: {\r\n      show: false,\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 1,\r\n    },\r\n    fill: {\r\n        opacity: 1,\r\n    },\r\n    series: [{\r\n        data: randomizeArray(sparklineData),\r\n    }],\r\n    yaxis: {\r\n        min: 0,\r\n    },\r\n\r\n    },\r\n\r\n}\r\n// spark6\r\nexport const spark6 = {\r\n  series: [{\r\n    name: 'series2',\r\n    data: [47, 45, 74, 14, 56, 74, 14, 11, 7, 39, 82],\r\n  }],\r\n\r\n  chartOptions: {\r\n    chart: {\r\n      type: 'line',\r\n      height: 160,\r\n      sparkline: {\r\n        enabled: true,\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    marker: {\r\n      show: false,\r\n    },\r\n    stroke: {\r\n      curve: 'straight',\r\n      width: 1,\r\n    },\r\n    fill: {\r\n        opacity: 1,\r\n    },\r\n    series: [{\r\n        data: randomizeArray(sparklineData),\r\n    }],\r\n    yaxis: {\r\n        min: 0,\r\n    },\r\n\r\n    },\r\n\r\n}\r\n// spark7\r\nexport const spark7 = {\r\n  series: [{\r\n    name: 'series2',\r\n    data: [25, 66, 41, 89, 63, 25, 44, 12, 36, 9, 54, 30, 40, 50],\r\n  }],\r\n\r\n  chartOptions: {\r\n    chart: {\r\n      type: 'line',\r\n      height: 160,\r\n      sparkline: {\r\n        enabled: true,\r\n      },\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        columnWidth: '50%',\r\n        endingShape: 'rounded',\r\n      },\r\n    },\r\n    colors: ['#72c2ff'],\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    marker: {\r\n      show: false,\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 1,\r\n    },\r\n    fill: {\r\n        opacity: 1,\r\n    },\r\n    series: [{\r\n        data: randomizeArray(sparklineData),\r\n    }],\r\n    yaxis: {\r\n        min: 0,\r\n    },\r\n\r\n    },\r\n\r\n}\r\n// spark8\r\nexport const spark8 = {\r\n  series: [{\r\n    name: 'series2',\r\n    data: [12, 14, 2, 47, 42, 15, 47, 75, 65, 19, 14, 30, 50],\r\n  }],\r\n\r\n  chartOptions: {\r\n    chart: {\r\n      type: 'line',\r\n      height: 160,\r\n      sparkline: {\r\n        enabled: true,\r\n      },\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        columnWidth: '60%',\r\n\r\n      },\r\n    },\r\n    colors: ['#08e5e8'],\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    marker: {\r\n      show: false,\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 1,\r\n    },\r\n    fill: {\r\n        opacity: 1,\r\n    },\r\n    series: [{\r\n        data: randomizeArray(sparklineData),\r\n    }],\r\n    yaxis: {\r\n        min: 0,\r\n    },\r\n\r\n    },\r\n\r\n}\r\n// spark9\r\nexport const spark9 = {\r\n  series: [{\r\n    name: 'series2',\r\n    data: [47, 45, 74, 14, 56, 74, 14, 11, 7, 39, 82],\r\n  }],\r\n\r\n  chartOptions: {\r\n    chart: {\r\n      type: 'line',\r\n      height: 160,\r\n      sparkline: {\r\n        enabled: true,\r\n      },\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        columnWidth: '80%',\r\n        endingShape: 'rounded',\r\n      },\r\n    },\r\n    colors: ['#a890d3'],\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    marker: {\r\n      show: false,\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 1,\r\n    },\r\n    fill: {\r\n        opacity: 1,\r\n    },\r\n    series: [{\r\n        data: randomizeArray(sparklineData),\r\n    }],\r\n    yaxis: {\r\n        min: 0,\r\n    },\r\n\r\n    },\r\n\r\n}\r\n// spark10\r\nexport const spark10 = {\r\n  series: [{\r\n    name: 'series2',\r\n    data: [25, 66, 41, 89, 63, 25, 44, 12, 36, 9, 54, 40, 60, 20],\r\n  }],\r\n\r\n  chartOptions: {\r\n    chart: {\r\n      type: 'line',\r\n      height: 160,\r\n      sparkline: {\r\n        enabled: true,\r\n      },\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        columnWidth: '50%',\r\n        endingShape: 'rounded',\r\n      },\r\n    },\r\n    colors: ['#dd5e89'],\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n          shade: 'dark',\r\n          gradientToColors: ['#dd5e89'],\r\n          shadeIntensity: 1,\r\n          opacityFrom: 0.7,\r\n          opacityTo: 0.9,\r\n            },\r\n        },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    marker: {\r\n      show: false,\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 1,\r\n    },\r\n    fill: {\r\n        opacity: 1,\r\n    },\r\n    series: [{\r\n        data: randomizeArray(sparklineData),\r\n    }],\r\n    yaxis: {\r\n        min: 0,\r\n    },\r\n\r\n    },\r\n\r\n}\r\n\r\n// apexRadialBar\r\nexport const radialBar = {\r\n  series: [76, 67, 61, 90],\r\n  chartOptions: {\r\n    plotOptions: {\r\n      radialBar: {\r\n        offsetY: -10,\r\n        startAngle: 0,\r\n        endAngle: 270,\r\n        hollow: {\r\n          margin: 5,\r\n          size: '30%',\r\n          background: 'transparent',\r\n          image: undefined,\r\n        },\r\n        dataLabels: {\r\n          name: {\r\n            show: false,\r\n\r\n          },\r\n          value: {\r\n            show: false,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    colors: ['#1ab7ea', '#0084ff', '#39539E', '#0077B5'],\r\n    labels: ['Vimeo', 'Messenger', 'Facebook', 'LinkedIn'],\r\n    legend: {\r\n      show: true,\r\n      floating: true,\r\n      fontSize: '16px',\r\n      position: 'left',\r\n      offsetX: '100%',\r\n      offsetY: 5,\r\n      labels: {\r\n          useSeriesColors: true,\r\n      },\r\n      markers: {\r\n          size: 0,\r\n      },\r\n      formatter: function (seriesName, opts) {\r\n          return seriesName + ':  ' + opts.w.globals.series[opts.seriesIndex]\r\n      },\r\n      itemMargin: {\r\n          horizontal: 1,\r\n      },\r\n    },\r\n    responsive: [{\r\n        breakpoint: 480,\r\n        options: {\r\n            legend: {\r\n                show: false,\r\n            },\r\n        },\r\n    }],\r\n  },\r\n}\r\n\r\n\r\n// All CustomApex Chart \r\n\r\nexport const customChartOne = {\r\n\r\n  chartOptions: {\r\n    chart: {\r\n      stacked: true,\r\n      events: {\r\n        selection: function (chart, e) {\r\n          console.log(new Date(e.xaxis.min))\r\n        },\r\n      },\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      \r\n    },\r\n    \r\n    colors: ['#2CD9C5', '#60F1C8', '#A4F7CC'],\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    series: [{\r\n      name: 'South',\r\n      data: generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 20, {\r\n        min: 10,\r\n        max: 60,\r\n      }),\r\n    },\r\n    {\r\n      name: 'North',\r\n      data: generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 20, {\r\n        min: 10,\r\n        max: 20,\r\n      }),\r\n    },\r\n    {\r\n      name: 'Central',\r\n      data: generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 20, {\r\n        min: 10,\r\n        max: 15,\r\n      }),\r\n    },\r\n  ],\r\n    stroke: {\r\n      curve: 'smooth',\r\n    },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        opacityFrom: 1,\r\n        opacityTo: 1,\r\n      },\r\n    },\r\n    legend: {\r\n      show: false\r\n    },\r\n    \r\n    xaxis: {\r\n      type: 'datetime',\r\n      show: false,\r\n      labels: {\r\n        show: false\r\n      }\r\n    },\r\n    yaxis: {\r\n      type: 'datetime',\r\n      show: false,\r\n      labels: {\r\n        show: false\r\n      }\r\n    },\r\n    grid: {\r\n      borderColor: \"#555\",\r\n      clipMarkers: false,\r\n      yaxis: {\r\n        lines: {\r\n          show: false\r\n        }\r\n      }\r\n    },\r\n    \r\n  },\r\n\r\n}\r\n\r\n\r\nexport const customChartTwo = {\r\n  \r\n  series: [{\r\n      name: 'series1',\r\n      data: [100, 80, 90, 70, 85, 109, 150],\r\n    }, {\r\n      name: 'series2',\r\n      data: [38, 70, 40, 70, 34, 52, 100],\r\n    },\r\n    {\r\n      name: 'series3',\r\n      data: [18, 30, 20, 50, 14, 30, 70],\r\n    }],\r\n    chartOptions: {\r\n      colors: ['#EDF0F4', '#83CFFF', '#2D99FF'],\r\n      chart: {\r\n        toolbar: {\r\n          show: false\r\n        },\r\n      },\r\n      fill: {\r\n        type: 'solid',\r\n       \r\n      },\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      stroke: {\r\n        curve: 'straight',\r\n      },\r\n      legend: {\r\n        show: false\r\n      },\r\n      \r\n      xaxis: {\r\n        type: 'datetime',\r\n        categories: ['2018-09-19T00:00:00', '2018-09-19T01:30:00', '2018-09-19T02:30:00',\r\n          '2018-09-19T03:30:00', '2018-09-19T04:30:00', '2018-09-19T05:30:00',\r\n          '2018-09-19T06:30:00',\r\n        ],\r\n        show: false,\r\n        labels: {\r\n          show: false\r\n        }\r\n      },\r\n      yaxis: {\r\n        show: false,\r\n        labels: {\r\n          show: false\r\n        }\r\n      },\r\n      grid: {\r\n        borderColor: \"#555\",\r\n        clipMarkers: false,\r\n        yaxis: {\r\n          lines: {\r\n            show: false\r\n          }\r\n        }\r\n      },\r\n      tooltip: {\r\n        x: {\r\n          format: 'dd/MM/yy HH:mm',\r\n        },\r\n\r\n      },\r\n    },\r\n}\r\n\r\n\r\nexport const customChartThree = {\r\n  series: [{\r\n    name: 'Inflation',\r\n    data: [10, 4, 7, 8, 4, 5, 4, 2, 6, 5, 7, 9],\r\n  }],\r\n  chartOptions: {\r\n    colors: ['#2CD9C5'],\r\n    chart: {\r\n      height: 350,\r\n      type: 'bar',\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        dataLabels: {\r\n          position: 'top', // top, center, bottom\r\n        },\r\n        endingShape: 'rounded',\r\n        columnWidth: '30%'\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n\r\n    xaxis: {\r\n      categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n      position: 'bottom',\r\n      labels: {\r\n        \r\n      },\r\n      axisBorder: {\r\n        show: false,\r\n      },\r\n      axisTicks: {\r\n        show: false,\r\n      },\r\n      crosshairs: {\r\n        fill: {\r\n          type: 'gradient',\r\n          gradient: {\r\n            colorFrom: '#D8E3F0',\r\n            colorTo: '#BED1E6',\r\n            stops: [0, 100],\r\n            opacityFrom: 0.4,\r\n            opacityTo: 0.5,\r\n          },\r\n        },\r\n      },\r\n      tooltip: {\r\n        enabled: true,\r\n        offsetY: -35,\r\n\r\n      },\r\n    },\r\n    fill: {\r\n      gradient: {\r\n        shade: 'light',\r\n        type: 'horizontal',\r\n        shadeIntensity: 0.25,\r\n        gradientToColors: undefined,\r\n        inverseColors: true,\r\n        opacityFrom: 1,\r\n        opacityTo: 1,\r\n        stops: [50, 0, 100, 100],\r\n      },\r\n    },\r\n    yaxis: {\r\n     \r\n      labels: {\r\n        show: true,\r\n        formatter: function (val) {\r\n          return val + '%'\r\n        },\r\n      },\r\n\r\n    },\r\n    grid: {\r\n      show: true,\r\n      borderColor: '#e4e4e4',\r\n      strokeDashArray: 0,\r\n      position: 'back',\r\n      xaxis: {\r\n          lines: {\r\n              show: true\r\n          }\r\n      },   \r\n      yaxis: {\r\n          lines: {\r\n              show: false\r\n          }\r\n      },  \r\n      \r\n    }\r\n  \r\n    \r\n    \r\n  },\r\n}\r\n\r\n\r\nexport const customChartFour = {\r\n  series: [{\r\n      data: [900, 600, 700, 800, 340, 680, 290],\r\n    }],\r\n    chartOptions: {\r\n      chart: {\r\n        toolbar: {\r\n          show: false\r\n        }\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          horizontal: true,\r\n          endingShape: 'rounded',\r\n          barHeight: '30%',\r\n        },\r\n      },\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      xaxis: {\r\n        categories: ['Monday, 11', 'Tuesday, 12', 'Wednesday, 13', 'Thursday, 14', 'Friday, 15', 'Saturday, 16', 'Sunday, 17'],\r\n      },\r\n    },\r\n}\r\n\r\nexport const customChartFive = {\r\n  series: [70, 80, 90],\r\n  chartOptions: {\r\n    chart: {\r\n      height: 350,\r\n      type: 'radialBar',\r\n      \r\n    },\r\n    plotOptions: {\r\n      radialBar: {\r\n        dataLabels: {\r\n          name: {\r\n            fontSize: '22px',\r\n          },\r\n          value: {\r\n            fontSize: '16px',\r\n          },\r\n          total: {\r\n            show: true,\r\n            label: 'Total',\r\n            formatter: function (w) {\r\n              // By default this function returns the average of all series. The below is just an example to show the use of custom formatter function\r\n              return 249\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    labels: ['Facebook', 'Twitter', 'Instagram'],\r\n    colors: ['#826AF9', '#9E86FF', '#F7D2FF'],\r\n    stroke: {\r\n      lineCap: \"round\",\r\n    },\r\n  },\r\n}\r\n\r\nexport const customChartSix = {\r\n  \r\n  series: [{\r\n    name: 'PRODUCT A',\r\n    data: [44, 55, 41, 67, 22, 43, 21, 49]\r\n  }, {\r\n    name: 'PRODUCT B',\r\n    data: [13, 23, 20, 8, 13, 27, 33, 12]\r\n  }, {\r\n    name: 'PRODUCT C',\r\n    data: [11, 17, 15, 15, 21, 14, 15, 13]\r\n  }],\r\n  chartOptions: {\r\n    colors: ['#826AF9', '#9E86FF', '#F7D2FF'],\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: false,\r\n        startingShape: 'flat',\r\n        endingShape: 'flat',\r\n        columnWidth: '30%',\r\n        \r\n        dataLabels: {\r\n          enabled: false,\r\n        }\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n      \r\n    },\r\n    chart: {\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      type: 'bar',\r\n      height: 350,\r\n      stacked: true,\r\n      stackType: '100%'\r\n    },\r\n    responsive: [{\r\n      breakpoint: 480,\r\n      options: {\r\n        legend: {\r\n          position: 'bottom',\r\n          offsetX: -10,\r\n          offsetY: 0\r\n        }\r\n      }\r\n    }],\r\n    xaxis: {\r\n      categories: ['2011 Q1', '2011 Q2', '2011 Q3', '2011 Q4', '2012 Q1', '2012 Q2',\r\n        '2012 Q3', '2012 Q4'\r\n      ],\r\n    },\r\n    fill: {\r\n      opacity: 1\r\n    },\r\n    legend: {\r\n      position: 'top',\r\n      offsetX: 0,\r\n      offsetY: 0\r\n    },\r\n  },\r\n}\r\n\r\nexport const customChartSeven = {\r\n\r\n  series: [{\r\n    name: '',\r\n    type: 'column',\r\n    data: [750, 650, 600, 500, 500, 350, 400, 270, 652, 320, 257, 160]\r\n  }, {\r\n    name: '',\r\n    type: 'line',\r\n    data: [23, 42, 35, 27, 43, 22, 17, 31, 22, 22, 12, 16]\r\n  }],\r\n  chartOptions: {\r\n    colors: ['#2CD9C5', '#FF6C40'],\r\n    plotOptions: {\r\n      bar: {\r\n        startingShape: 'flat',\r\n        endingShape: 'rounded',\r\n        columnWidth: '30%',\r\n        dataLabels: {\r\n          position: 'top', // top, center, bottom\r\n        },\r\n      }\r\n    },\r\n    chart: {\r\n      height: 350,\r\n      type: 'line',\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    stroke: {\r\n      width: [0, 4]\r\n    },\r\n    title: {\r\n      text: ''\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n      enabledOnSeries: [1]\r\n    },\r\n    labels: ['01 Jan 2001', '02 Jan 2001', '03 Jan 2001', '04 Jan 2001', '05 Jan 2001', '06 Jan 2001', '07 Jan 2001', '08 Jan 2001', '09 Jan 2001', '10 Jan 2001', '11 Jan 2001', '12 Jan 2001'],\r\n    xaxis: {\r\n      type: 'datetime'\r\n    },\r\n    yaxis: [{\r\n      title: {\r\n        text: '',\r\n      },\r\n    \r\n    }, {\r\n      opposite: true,\r\n      title: {\r\n        text: ''\r\n      }\r\n    }],\r\n    grid: {\r\n      show: true,\r\n      borderColor: '#e4e4e4',\r\n      strokeDashArray: 0,\r\n      position: 'back',\r\n      xaxis: {\r\n          lines: {\r\n              show: true\r\n          }\r\n      },   \r\n      yaxis: {\r\n          lines: {\r\n              show: true\r\n          }\r\n      },  \r\n      \r\n    }\r\n  },\r\n  \r\n  \r\n}\r\n\r\nexport const customChartEight = {\r\n  series: [{\r\n    name: 'series1',\r\n    data: [10, 70, 58, 51, 42, 109, 100]\r\n  }, {\r\n    name: 'series2',\r\n    data: [11, 32, 45, 32, 84, 52, 41]\r\n  },\r\n  {\r\n    name: 'series3',\r\n    data: [30, 10, 30, 14, 28, 35, 22]\r\n  },\r\n\r\n  ],\r\n  chartOptions: {\r\n    colors: ['#EDF0F4', '#2D99FF', '#83CFFF'],\r\n    fill: {\r\n      type: 'solid',\r\n      \r\n    },\r\n    chart: {\r\n      height: 350,\r\n      type: 'area',\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    legend: {\r\n      show: false\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    stroke: {\r\n      curve: 'smooth'\r\n    },\r\n    xaxis: {\r\n      type: 'datetime',\r\n      categories: [\"2018-09-19T00:00:00.000Z\", \"2018-09-19T01:30:00.000Z\", \"2018-09-19T02:30:00.000Z\", \"2018-09-19T03:30:00.000Z\", \"2018-09-19T04:30:00.000Z\", \"2018-09-19T05:30:00.000Z\", \"2018-09-19T06:30:00.000Z\"]\r\n    },\r\n    tooltip: {\r\n      x: {\r\n        format: 'dd/MM/yy HH:mm'\r\n      },\r\n    },\r\n  },\r\n}\r\nexport const customChartNine = {\r\n  series: [{\r\n    name: 'Net Profit',\r\n    data: [30, 40, 30, 50, 30, 30, 40, 30, 50]\r\n  }, {\r\n    name: 'Revenue',\r\n    data: [20, 50, 20, 60, 20, 20, 50, 20, 60]\r\n  }],\r\n  chartOptions: {\r\n    colors: ['#FF6C40', '#FFE700'],\r\n    chart: {\r\n      type: 'bar',\r\n      height: 350,\r\n      toolbar: {\r\n        show: false\r\n      },\r\n    },\r\n    legend: {\r\n      show: false\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: false,\r\n        columnWidth: '35%',\r\n        endingShape: 'rounded'\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    stroke: {\r\n      show: true,\r\n      width: 2,\r\n      colors: ['transparent']\r\n    },\r\n    xaxis: {\r\n      categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct'],\r\n    },\r\n    yaxis: {\r\n      title: {\r\n        text: ''\r\n      }\r\n    },\r\n    fill: {\r\n      opacity: 1\r\n    },\r\n    tooltip: {\r\n      y: {\r\n        formatter: function (val) {\r\n          return \"$ \" + val + \" thousands\"\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \r\n}\r\n\r\nexport const customChartTen = {\r\n  series: [{\r\n    data: [44, 75, 21, 30, 35, 43, 51]\r\n  }, {\r\n    data: [15, 22, 5, 10, 15, 44, 32]\r\n  }],\r\n  chartOptions: {\r\n    colors: ['#2D99FF', '#2CD9C5'],\r\n    chart: {\r\n      type: 'bar',\r\n      height: 430,\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        endingShape: 'rounded',\r\n        horizontal: true,\r\n        dataLabels: {\r\n          position: 'top',\r\n        },\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n      \r\n    },\r\n    legend: {\r\n      show: false\r\n    },\r\n    stroke: {\r\n      show: true,\r\n      width: 1,\r\n      colors: ['#fff']\r\n    },\r\n    xaxis: {\r\n      categories: ['Mon,11', 'Tue,12', 'Wed,13', 'Thu,14', 'Fri,15', 'Sat,16', 'Sun,17'],\r\n    },\r\n  },\r\n  \r\n  \r\n\r\n}\r\nexport const customChartEleven = {\r\n  series: [{\r\n    name: 'Point A',\r\n    data: [44, 55, 41, 67, 22, 43]\r\n  }, {\r\n    name: 'Point B',\r\n    data: [13, 23, 20, 8, 13, 27]\r\n  }, {\r\n    name: 'Point C',\r\n    data: [11, 17, 15, 15, 21, 14]\r\n  }, {\r\n    name: 'Point D',\r\n    data: [21, 7, 25, 13, 22, 8]\r\n  }],\r\n  chartOptions: {\r\n    colors: ['#FF6C40', '#FF8F6D', '#FFBD98', '#FFF2D4'],\r\n    chart: {\r\n      type: 'bar',\r\n      height: 350,\r\n      stacked: true,\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      zoom: {\r\n        enabled: true\r\n      },\r\n     \r\n    },\r\n    responsive: [{\r\n      breakpoint: 480,\r\n      options: {\r\n        legend: {\r\n          position: 'bottom',\r\n          offsetX: -10,\r\n          offsetY: 0\r\n        }\r\n      }\r\n    }],\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: false,\r\n        columnWidth: '25%',\r\n      },\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    xaxis: {\r\n      type: 'datetime',\r\n      categories: ['01/01/2011 GMT', '01/02/2011 GMT', '01/03/2011 GMT', '01/04/2011 GMT',\r\n        '01/05/2011 GMT', '01/06/2011 GMT'\r\n      ],\r\n    },\r\n    legend: {\r\n      position: 'top',\r\n\r\n    },\r\n    fill: {\r\n      opacity: 1\r\n    }\r\n  },\r\n  \r\n  \r\n\r\n}\r\n\r\nexport const customChartTwelve = {\r\n  series: [{\r\n    data: [34, 44, 54, 21, 12, 43, 33, 23, 66, 66, 58]\r\n  },\r\n  {\r\n    data: [45, 52, 38, 24, 33, 26, 21, 20, 6, 8, 15, 10]\r\n  },\r\n  {\r\n    data: [87, 57, 74, 99, 75, 38, 62, 47, 82, 56, 45, 47]\r\n  }],\r\n  chartOptions: {\r\n    colors: ['#FFE700', '#826AF9', '#2CD9C5'],\r\n    chart: {\r\n      type: 'line',\r\n      height: 350,\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    stroke: {\r\n      curve: 'stepline',\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    \r\n    markers: {\r\n      hover: {\r\n        sizeOffset: 4\r\n      }\r\n    }\r\n  },\r\n  \r\n  \r\n\r\n}\r\n\r\nexport const customChartThirteen = {\r\n  series: [{\r\n    name: 'Cash Flow',\r\n    data: [5.45, 3.42, -3, 4, 2, 5, -4.16, 11.1, 5, 9.34, 5, -3.07,\r\n      5, -2, 7.37, -6.1, 13.57]\r\n  }],\r\n  chartOptions: {\r\n    \r\n    chart: {\r\n      type: 'bar',\r\n      height: 350,\r\n      toolbar: {\r\n        show: false\r\n      },\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        colors: {\r\n          ranges: [{\r\n            from: 6,\r\n            to: 10,\r\n            color: '#2D99FF'\r\n          },{\r\n            from: 1,\r\n            to: 5,\r\n            color: '#83CFFF'\r\n          },\r\n          {\r\n            from: -45,\r\n            to: 0,\r\n            color: '#F3F5F8'\r\n          }]\r\n        },\r\n        endingShape: 'rounded',\r\n        columnWidth: '40%',\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        formatter: function (y) {\r\n          return y.toFixed(0) + \"%\";\r\n        }\r\n      }\r\n    },\r\n    xaxis: {\r\n      type: 'datetime',\r\n      categories: [\r\n        '2011-01-01', '2011-02-01', '2011-03-01', '2011-04-01', '2011-05-01', '2011-06-01',\r\n        '2011-07-01', '2011-08-01', '2011-09-01', '2011-10-01', '2011-11-01', '2011-12-01',\r\n        '2012-01-01', '2012-02-01', '2012-03-01', '2012-04-01', '2012-05-01', '2012-06-01',\r\n        \r\n      ],\r\n      labels: {\r\n        rotate: -90\r\n      }\r\n    }\r\n  },\r\n}\r\n\r\nexport const customChartFourteen = {\r\n  series: [{\r\n    name: \"Desktops\",\r\n    data: [10, 41, 35, 120, 49, 62, 69, 91, 148]\r\n  },\r\n  {\r\n    name: \"Tablet\",\r\n    data: [20, 81, 65, 101, 89, 82, 89, 51, 98]\r\n  }],\r\n  chartOptions: {\r\n    colors: ['#2CD9C5', '#FFE700'],\r\n    chart: {\r\n      height: 350,\r\n      type: 'line',\r\n      zoom: {\r\n        enabled: false\r\n      },\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    stroke: {\r\n      curve: 'straight'\r\n    },\r\n    \r\n    xaxis: {\r\n      categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'],\r\n    }\r\n  },\r\n\r\n}\r\n\r\nexport const customChartFifteen = {\r\n  series: [{\r\n    name: 'Series 1',\r\n    data: [40, 40, 40, 30, 30, 30],\r\n  }, {\r\n    name: 'Series 2',\r\n    data: [30, 20, 30, 10, 40, 40],\r\n  }],\r\n  chartOptions: {\r\n    colors: ['#FFE700', '#826AF9'],\r\n    chart: {\r\n      height: 350,\r\n      type: 'radar',\r\n      dropShadow: {\r\n        enabled: true,\r\n        blur: 1,\r\n        left: 1,\r\n        top: 1\r\n      },\r\n      toolbar: {\r\n        show: false\r\n      },\r\n    },\r\n    stroke: {\r\n      width: 2\r\n    },\r\n    fill: {\r\n      opacity: 0.7\r\n    },\r\n    markers: {\r\n      size: 0\r\n    },\r\n    xaxis: {\r\n      categories: ['2015', '2016', '2017', '2018', '2019', '2020']\r\n    }\r\n  },\r\n  \r\n}\r\n\r\nexport const customChartSixteen = {\r\n  series: [44, 55, 13, 43, 22, 10],\r\n  chartOptions: {\r\n    colors: ['#505D6F', '#826AF9', '#2CD9C5', '#2D99FF', '#FF6C40', '#FFE700'],\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    chart: {\r\n      width: 380,\r\n      type: 'pie',\r\n      \r\n    },\r\n    plotOptions: {\r\n      pie: {\r\n        expandOnClick: true,\r\n        startAngle: 6,\r\n      }\r\n    },\r\n    labels: ['Point One', 'Point Two', 'Point Three', 'Point Four', 'Point Five'],\r\n    responsive: [{\r\n      breakpoint: 480,\r\n      options: {\r\n        chart: {\r\n          width: 200\r\n        },\r\n        legend: {\r\n          position: 'bottom'\r\n        }\r\n      }\r\n    }]\r\n  }\r\n}\r\n\r\nexport const customChartSeventeen = {\r\n  series: [30],\r\n  chartOptions: {\r\n    colors: ['#826AF9'],\r\n    chart: {\r\n      height: 350,\r\n      type: 'radialBar',\r\n    },\r\n    plotOptions: {\r\n      radialBar: {\r\n        hollow: {\r\n          size: '70%',\r\n        },\r\n        dataLabels: {\r\n          value: {\r\n            fontSize: '20px',\r\n          },\r\n          total: {\r\n            show: true,\r\n            label: 'Facebook',\r\n            \r\n          }\r\n        }\r\n      },\r\n      \r\n    },\r\n    stroke: {\r\n      lineCap: 'round'\r\n    },\r\n    \r\n  },\r\n}\r\n\r\nexport const customChartEighteen = {\r\n  series: [70],\r\n  chartOptions: {\r\n    colors: ['#2CD9C5'],\r\n    chart: {\r\n      height: 350,\r\n      type: 'radialBar',\r\n    },\r\n    plotOptions: {\r\n      radialBar: {\r\n        hollow: {\r\n          size: '70%',\r\n        },\r\n        dataLabels: {\r\n          value: {\r\n            fontSize: '20px',\r\n          },\r\n          total: {\r\n            show: true,\r\n            label: 'Twitter',\r\n            \r\n          }\r\n        }\r\n      },\r\n      \r\n    },\r\n    stroke: {\r\n      lineCap: 'round'\r\n    },\r\n    \r\n  },\r\n}\r\n"],"sourceRoot":""}