{"version":3,"sources":["webpack:///../../../src/components/VOverflowBtn/VOverflowBtn.ts","webpack:///./src/views/app/forms/OverflowButtons.vue","webpack:///src/views/app/forms/OverflowButtons.vue","webpack:///./src/views/app/forms/OverflowButtons.vue?7b77","webpack:///./src/views/app/forms/OverflowButtons.vue?e747","webpack:///../../../src/components/VBtn/index.ts","webpack:///../../../src/components/VAutocomplete/index.ts","webpack:///../../../src/components/VAutocomplete/VAutocomplete.ts"],"names":["VAutocomplete","extend","name","props","editable","Boolean","segmented","computed","classes","options","call","this","isAnyValueAllowed","isSingle","computedItems","allItems","filteredItems","labelValue","isFocused","persistentPlaceholder","isLabelActive","methods","genSelections","VSelect","genCommaSelection","item","index","last","genSegmentedBtn","genInput","input","VTextField","data","domProps","value","internalSearch","attrs","readonly","genLabel","label","style","itemValue","getValue","itemObj","find","i","text","callback","$createElement","VBtn","on","click","e","stopPropagation","consoleWarn","updateValue","val","initialValue","lazyValue","$emit","staticClass","staticRenderFns","metaInfo","title","dropdown_font","dropdown_edit","dropdown_icon","console","log","component","defaultMenuProps","VSelectMenuProps","offsetY","offsetOverflow","transition","autoSelectFirst","type","default","filter","Function","queryText","itemText","toLocaleLowerCase","indexOf","hideNoData","menuProps","noFilter","searchInput","String","lazySearch","selectedIndex","selectedValues","selectedItems","map","hasDisplayedItems","hideSelected","some","hasItem","length","currentRange","selectedItem","getText","isSearching","getPropertyFromItem","get","set","isDirty","searchIsDirty","multiple","menuCanShow","$_menuProps","contentClass","trim","valueComparator","internalValue","listData","items","virtualizedItems","watch","document","addEventListener","onCopy","$refs","select","removeEventListener","blur","updateSelf","isMenuActive","hasSlot","oldVal","activateMenu","created","setSearch","destroyed","onFilteredItemsChanged","preSelectedItem","menu","listIndex","setMenuIndex","findIndex","$nextTick","getTiles","onInternalSearchChanged","updateMenuDimensions","updateDimensions","changeSelectedIndex","keyCode","keyCodes","left","right","backspace","delete","deleteCurrentItem","curIndex","curItem","isInteractive","getDisabled","lastIndex","nextIndex","nextItem","selectItem","setValue","clearableCallback","mergeData","getObjectValueByPath","autocomplete","genInputSlot","slot","role","onClick","onFocus","isAppendInner","target","onInput","badInput","validity","onKeyDown","ctrlKey","home","end","includes","onSpaceDown","onTabDown","onUpDown","preventDefault","setSelectedItems","event","currentItem","currentItemText","_a","clipboardData","setData","_b"],"mappings":"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","file":"js/chunk-77501d24.7631029f.js","sourcesContent":["// Styles\nimport './VOverflowBtn.sass'\n\n// Extensions\nimport VSelect from '../VSelect/VSelect'\nimport VAutocomplete from '../VAutocomplete'\nimport VTextField from '../VTextField/VTextField'\n\n// Components\nimport VBtn from '../VBtn'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n/* @vue/component */\nexport default VAutocomplete.extend({\n  name: 'v-overflow-btn',\n\n  props: {\n    editable: Boolean,\n    segmented: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VAutocomplete.options.computed.classes.call(this),\n        'v-overflow-btn': true,\n        'v-overflow-btn--segmented': this.segmented,\n        'v-overflow-btn--editable': this.editable,\n      }\n    },\n    isAnyValueAllowed (): boolean {\n      return this.editable ||\n        VAutocomplete.options.computed.isAnyValueAllowed.call(this)\n    },\n    isSingle (): true {\n      return true\n    },\n    computedItems (): object[] {\n      return this.segmented ? this.allItems : this.filteredItems\n    },\n    labelValue (): boolean {\n      return (this.isFocused && !this.persistentPlaceholder) || this.isLabelActive\n    },\n  },\n\n  methods: {\n    genSelections () {\n      return this.editable\n        ? VAutocomplete.options.methods.genSelections.call(this)\n        : VSelect.options.methods.genSelections.call(this) // Override v-autocomplete's override\n    },\n    genCommaSelection (item: any, index: number, last: boolean) {\n      return this.segmented\n        ? this.genSegmentedBtn(item)\n        : VSelect.options.methods.genCommaSelection.call(this, item, index, last)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = input.data || {}\n      input.data.domProps!.value = this.editable ? this.internalSearch : ''\n      input.data.attrs!.readonly = !this.isAnyValueAllowed\n\n      return input\n    },\n    genLabel () {\n      if (this.editable && this.isFocused) return null\n\n      const label = VTextField.options.methods.genLabel.call(this)\n\n      if (!label) return label\n\n      label.data = label.data || {}\n\n      // Reset previously set styles from parent\n      label.data.style = {}\n\n      return label\n    },\n    genSegmentedBtn (item: any) {\n      const itemValue = this.getValue(item)\n      const itemObj = this.computedItems.find(i => this.getValue(i) === itemValue) || item\n\n      if (!itemObj.text || !itemObj.callback) {\n        consoleWarn('When using \"segmented\" prop without a selection slot, items must contain both a text and callback property', this)\n        return null\n      }\n\n      return this.$createElement(VBtn, {\n        props: { text: true },\n        on: {\n          click (e: Event) {\n            e.stopPropagation()\n            itemObj.callback(e)\n          },\n        },\n      }, [itemObj.text])\n    },\n    updateValue (val: boolean) {\n      if (val) {\n        this.initialValue = this.lazyValue\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue)\n      }\n    },\n  },\n})\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\",\"md\":\"6\"}},[_c('base-card',[_c('v-card-title',[_vm._v(\" Usage \")]),_c('v-card-text',[_c('v-overflow-btn',{staticClass:\"my-2\",attrs:{\"items\":_vm.dropdown_font,\"label\":\"Overflow Btn\",\"target\":\"#dropdown-example-1\"}})],1)],1)],1),_c('v-col',{attrs:{\"cols\":\"12\",\"md\":\"6\"}},[_c('base-card',[_c('v-card-title',[_vm._v(\" Overflow Counter \")]),_c('v-card-text',[_c('v-overflow-btn',{staticClass:\"my-2\",attrs:{\"items\":_vm.dropdown_edit,\"label\":\"Overflow Btn w/ counter\",\"counter\":\"\",\"item-value\":\"text\"}})],1)],1)],1),_c('v-col',{attrs:{\"cols\":\"12\",\"md\":\"6\"}},[_c('base-card',[_c('v-card-title',[_vm._v(\" Editable \")]),_c('v-card-text',[_c('v-overflow-btn',{staticClass:\"my-2\",attrs:{\"items\":_vm.dropdown_edit,\"label\":\"Overflow Btn w/ editable\",\"editable\":\"\",\"item-value\":\"text\"}})],1)],1)],1),_c('v-col',{attrs:{\"cols\":\"12\",\"md\":\"6\"}},[_c('base-card',[_c('v-card-title',[_vm._v(\" Filled \")]),_c('v-card-text',[_c('v-overflow-btn',{staticClass:\"my-2\",attrs:{\"items\":_vm.dropdown_font,\"label\":\"Overflow Btn - filled\",\"filled\":\"\",\"target\":\"#dropdown-example-1\"}})],1)],1)],1),_c('v-col',{attrs:{\"cols\":\"12\",\"md\":\"6\"}},[_c('base-card',[_c('v-card-title',[_vm._v(\" Loading \")]),_c('v-card-text',[_c('v-overflow-btn',{staticClass:\"my-2\",attrs:{\"items\":_vm.dropdown_font,\"label\":\"Overflow Btn w/ loading\",\"loading\":\"\",\"target\":\"#dropdown-example-1\"}})],1)],1)],1),_c('v-col',{attrs:{\"cols\":\"12\",\"md\":\"6\"}},[_c('base-card',[_c('v-card-title',[_vm._v(\" Segmented \")]),_c('v-card-text',[_c('v-overflow-btn',{staticClass:\"my-2\",attrs:{\"items\":_vm.dropdown_icon,\"label\":\"Overflow Btn w/ segmented\",\"segmented\":\"\",\"target\":\"#dropdown-example-2\"}})],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <v-row>\r\n        <v-col cols=\"12\" md=\"6\">\r\n            <base-card>\r\n                <v-card-title>\r\n                    Usage\r\n                </v-card-title>\r\n                <v-card-text>\r\n                    <v-overflow-btn\r\n                        class=\"my-2\"\r\n                        :items=\"dropdown_font\"\r\n                        label=\"Overflow Btn\"\r\n                        target=\"#dropdown-example-1\"\r\n                    />\r\n                </v-card-text>\r\n            </base-card>\r\n        </v-col>\r\n        <v-col cols=\"12\" md=\"6\">\r\n            <base-card>\r\n                <v-card-title>\r\n                    Overflow Counter\r\n                </v-card-title>\r\n                <v-card-text>\r\n                    <v-overflow-btn\r\n                        class=\"my-2\"\r\n                        :items=\"dropdown_edit\"\r\n                        label=\"Overflow Btn w/ counter\"\r\n                        counter\r\n                        item-value=\"text\"\r\n                    />\r\n                </v-card-text>\r\n            </base-card>\r\n        </v-col>\r\n        <v-col cols=\"12\" md=\"6\">\r\n            <base-card>\r\n                <v-card-title>\r\n                    Editable\r\n                </v-card-title>\r\n                <v-card-text>\r\n                    <v-overflow-btn\r\n                        class=\"my-2\"\r\n                        :items=\"dropdown_edit\"\r\n                        label=\"Overflow Btn w/ editable\"\r\n                        editable\r\n                        item-value=\"text\"\r\n                    />\r\n                </v-card-text>\r\n            </base-card>\r\n        </v-col>\r\n        <v-col cols=\"12\" md=\"6\">\r\n            <base-card>\r\n                <v-card-title>\r\n                    Filled\r\n                </v-card-title>\r\n                <v-card-text>\r\n                    <v-overflow-btn\r\n                        class=\"my-2\"\r\n                        :items=\"dropdown_font\"\r\n                        label=\"Overflow Btn - filled\"\r\n                        filled\r\n                        target=\"#dropdown-example-1\"\r\n                    />\r\n                </v-card-text>\r\n            </base-card>\r\n        </v-col>\r\n        <v-col cols=\"12\" md=\"6\">\r\n            <base-card>\r\n                <v-card-title>\r\n                    Loading\r\n                </v-card-title>\r\n                <v-card-text>\r\n                    <v-overflow-btn\r\n                        class=\"my-2\"\r\n                        :items=\"dropdown_font\"\r\n                        label=\"Overflow Btn w/ loading\"\r\n                        loading\r\n                        target=\"#dropdown-example-1\"\r\n                    />\r\n                </v-card-text>\r\n            </base-card>\r\n        </v-col>\r\n        <v-col cols=\"12\" md=\"6\">\r\n            <base-card>\r\n                <v-card-title>\r\n                    Segmented\r\n                </v-card-title>\r\n                <v-card-text>\r\n                    <v-overflow-btn\r\n                        class=\"my-2\"\r\n                        :items=\"dropdown_icon\"\r\n                        label=\"Overflow Btn w/ segmented\"\r\n                        segmented\r\n                        target=\"#dropdown-example-2\"\r\n                    />\r\n                </v-card-text>\r\n            </base-card>\r\n        </v-col>\r\n    </v-row>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data: () => ({\r\n        metaInfo: {\r\n            // title will be injected into parent titleTemplate\r\n            title: 'Overflow Buttons'\r\n        },\r\n        // usage\r\n        dropdown_font: ['Arial', 'Calibri', 'Courier', 'Verdana'],\r\n        // counter\r\n        dropdown_edit: [\r\n            {text: '100%'},\r\n            {text: '75%'},\r\n            {text: '50%'},\r\n            {text: '25%'},\r\n            {text: '0%'}\r\n        ],\r\n        // segmented\r\n        dropdown_icon: [\r\n            {text: 'list', callback: () => console.log('list')},\r\n            {text: 'favorite', callback: () => console.log('favorite')},\r\n            {text: 'delete', callback: () => console.log('delete')}\r\n        ]\r\n    })\r\n}\r\n</script>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OverflowButtons.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OverflowButtons.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./OverflowButtons.vue?vue&type=template&id=41b10203&\"\nimport script from \"./OverflowButtons.vue?vue&type=script&lang=js&\"\nexport * from \"./OverflowButtons.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import VBtn from './VBtn'\n\nexport { VBtn }\nexport default VBtn\n","import VAutocomplete from './VAutocomplete'\n\nexport { VAutocomplete }\nexport default VAutocomplete\n","// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport {\n  getObjectValueByPath,\n  getPropertyFromItem,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { PropType, VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    } as PropValidator<(item: any, queryText: string, itemText: string) => boolean>,\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | null>,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText)\n        const text = value != null ? String(value) : ''\n\n        return this.filter(item, String(this.internalSearch), text)\n      })\n    },\n    internalSearch: {\n      get (): string | null {\n        return this.lazySearch\n      },\n      set (val: any) { // TODO: this should be `string | null` but it breaks lots of other types\n        // emit update event only when the new\n        // search value is different from previous\n        if (this.lazySearch !== val) {\n          this.lazySearch = val\n          this.$emit('update:search-input', val)\n        }\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.blur()\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = null\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  destroyed () {\n    document.removeEventListener('copy', this.onCopy)\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      if (!this.autoSelectFirst) {\n        const preSelectedItem = oldVal[this.$refs.menu.listIndex]\n\n        if (preSelectedItem) {\n          this.setMenuIndex(val.findIndex(i => i === preSelectedItem))\n        } else {\n          this.setMenuIndex(-1)\n        }\n        this.$emit('update:list-index', this.$refs.menu.listIndex)\n      }\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n\n        if (this.autoSelectFirst && val.length) {\n          this.setMenuIndex(0)\n          this.$emit('update:list-index', this.$refs.menu.listIndex)\n        }\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      const curIndex = this.selectedIndex\n      const curItem = this.selectedItems[curIndex]\n\n      // Do nothing if input or item is disabled\n      if (\n        !this.isInteractive ||\n        this.getDisabled(curItem)\n      ) return\n\n      const lastIndex = this.selectedItems.length - 1\n\n      // Select the last item if\n      // there is no selection\n      if (\n        this.selectedIndex === -1 &&\n        lastIndex !== 0\n      ) {\n        this.selectedIndex = lastIndex\n\n        return\n      }\n\n      const length = this.selectedItems.length\n      const nextIndex = curIndex !== length - 1\n        ? curIndex\n        : curIndex - 1\n      const nextItem = this.selectedItems[nextIndex]\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : null)\n      } else {\n        this.selectItem(curItem)\n      }\n\n      this.selectedIndex = nextIndex\n    },\n    clearableCallback () {\n      this.internalSearch = null\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = mergeData(input.data!, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        domProps: { value: this.internalSearch },\n      })\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections (): VNode | never[] {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      if (!this.isAppendInner(e.target)) this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      if (!this.multiple && value === '') this.deleteCurrentItem()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown (e: Event) {\n      // Prevent screen from scrolling\n      e.preventDefault()\n\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (\n        !this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (\n        !this.multiple &&\n        !this.valueComparator(\n          this.internalSearch,\n          this.getValue(this.internalValue)\n        )\n      ) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any): boolean {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData?.setData('text/plain', currentItemText)\n      event.clipboardData?.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n"],"sourceRoot":""}