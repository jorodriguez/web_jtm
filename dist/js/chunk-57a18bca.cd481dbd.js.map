{"version":3,"sources":["webpack:///../../../src/components/VCombobox/VCombobox.ts","webpack:///../../../src/components/VGrid/VSpacer.ts","webpack:///./src/views/app/forms/ComboBox.vue","webpack:///src/views/app/forms/ComboBox.vue","webpack:///./src/views/app/forms/ComboBox.vue?e3e1","webpack:///./src/views/app/forms/ComboBox.vue?2ac7","webpack:///../../../src/components/VAutocomplete/VAutocomplete.ts"],"names":["VAutocomplete","extend","name","props","delimiters","type","Array","default","returnObject","Boolean","data","editingIndex","computed","computedCounterValue","this","multiple","selectedItems","length","internalSearch","toString","hasSlot","VSelect","options","call","isAnyValueAllowed","menuCanShow","isFocused","hasDisplayedItems","$slots","hideNoData","searchIsDirty","methods","onInternalSearchChanged","val","delimiter","find","d","endsWith","slice","updateTags","updateMenuDimensions","genInput","input","attrs","on","paste","onPaste","genChipSelection","item","index","chip","componentOptions","listeners","dblclick","getText","selectedIndex","onChipInput","onEnterDown","e","preventDefault","getMenuIndex","$nextTick","updateSelf","onKeyDown","keyCode","ctrlKey","keyCodes","home","end","includes","left","$refs","selectionStart","enter","changeSelectedIndex","onTabDown","stopPropagation","selectItem","updateEditing","toLocaleLowerCase","setSelectedItems","internalValue","setValue","value","undefined","findIndex","Object","assign","splice","push","updateCombobox","isUsingSlot","$scopedSlots","selection","hasChips","menuIndex","itemToSelect","event","$emit","pastedItemText","_a","clipboardData","getData","findExistingIndex","clearableCallback","createSimpleFunctional","callback","expression","_c","select","key","staticClass","domProps","_vm","_s","$$v","model","search","$event","scopedSlots","fn","colors","parent","selected","$set","color","_v","edit","metaInfo","title","itemsOne","activator","attach","editing","items","header","text","nonce","menu","x","y","watch","prev","map","v","filter","queryText","itemText","hasValue","query","toLowerCase","indexOf","component","staticRenderFns","defaultMenuProps","VSelectMenuProps","offsetY","offsetOverflow","transition","autoSelectFirst","Function","menuProps","noFilter","searchInput","String","lazySearch","classes","computedItems","filteredItems","selectedValues","getValue","hideSelected","some","hasItem","currentRange","selectedItem","isSearching","allItems","getPropertyFromItem","get","set","isDirty","$_menuProps","contentClass","trim","i","valueComparator","listData","virtualizedItems","document","addEventListener","onCopy","removeEventListener","blur","isMenuActive","oldVal","activateMenu","created","setSearch","destroyed","onFilteredItemsChanged","preSelectedItem","listIndex","setMenuIndex","getTiles","updateDimensions","right","backspace","delete","deleteCurrentItem","curIndex","curItem","isInteractive","getDisabled","lastIndex","nextIndex","nextItem","VTextField","mergeData","getObjectValueByPath","autocomplete","genInputSlot","slot","role","genSelections","onClick","onFocus","isAppendInner","target","onInput","badInput","validity","onSpaceDown","onUpDown","currentItem","currentItemText","setData","_b"],"mappings":"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","file":"js/chunk-57a18bca.cd481dbd.js","sourcesContent":["// Styles\nimport '../VAutocomplete/VAutocomplete.sass'\n\n// Extensions\nimport VSelect from '../VSelect/VSelect'\nimport VAutocomplete from '../VAutocomplete/VAutocomplete'\n\n// Utils\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n/* @vue/component */\nexport default VAutocomplete.extend({\n  name: 'v-combobox',\n\n  props: {\n    delimiters: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<string[]>,\n    returnObject: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data: () => ({\n    editingIndex: -1,\n  }),\n\n  computed: {\n    computedCounterValue (): number {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.internalSearch || '').toString().length\n    },\n    hasSlot (): boolean {\n      return VSelect.options.computed.hasSlot.call(this) || this.multiple\n    },\n    isAnyValueAllowed (): boolean {\n      return true\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems ||\n        (!!this.$slots['no-data'] && !this.hideNoData)\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null\n    },\n  },\n\n  methods: {\n    onInternalSearchChanged (val: any) {\n      if (\n        val &&\n        this.multiple &&\n        this.delimiters.length\n      ) {\n        const delimiter = this.delimiters.find(d => val.endsWith(d))\n        if (delimiter != null) {\n          this.internalSearch = val.slice(0, val.length - delimiter.length)\n          this.updateTags()\n        }\n      }\n\n      this.updateMenuDimensions()\n    },\n    genInput () {\n      const input = VAutocomplete.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n      input.data!.on!.paste = this.onPaste\n\n      return input\n    },\n    genChipSelection (item: object, index: number) {\n      const chip = VSelect.options.methods.genChipSelection.call(this, item, index)\n\n      // Allow user to update an existing value\n      if (this.multiple) {\n        chip.componentOptions!.listeners! = {\n          ...chip.componentOptions!.listeners!,\n          dblclick: () => {\n            this.editingIndex = index\n            this.internalSearch = this.getText(item)\n            this.selectedIndex = -1\n          },\n        }\n      }\n\n      return chip\n    },\n    onChipInput (item: object) {\n      VSelect.options.methods.onChipInput.call(this, item)\n\n      this.editingIndex = -1\n    },\n    // Requires a manual definition\n    // to overwrite removal in v-autocomplete\n    onEnterDown (e: Event) {\n      e.preventDefault()\n      // If has menu index, let v-select-list handle\n      if (this.getMenuIndex() > -1) return\n\n      this.$nextTick(this.updateSelf)\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // If user is at selection index of 0\n      // create a new tag\n      if (this.multiple &&\n        keyCode === keyCodes.left &&\n        this.$refs.input.selectionStart === 0\n      ) {\n        this.updateSelf()\n      } else if (keyCode === keyCodes.enter) {\n        this.onEnterDown(e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onTabDown (e: KeyboardEvent) {\n      // When adding tags, if searching and\n      // there is not a filtered options,\n      // add the value to the tags list\n      if (this.multiple &&\n        this.internalSearch &&\n        this.getMenuIndex() === -1\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        return this.updateTags()\n      }\n\n      VAutocomplete.options.methods.onTabDown.call(this, e)\n    },\n    selectItem (item: object) {\n      // Currently only supports items:<string[]>\n      if (this.editingIndex > -1) {\n        this.updateEditing()\n      } else {\n        VAutocomplete.options.methods.selectItem.call(this, item)\n\n        // if selected item contains search value,\n        // remove the search string\n        if (\n          this.internalSearch &&\n          this.multiple &&\n          this.getText(item).toLocaleLowerCase().includes(this.internalSearch.toLocaleLowerCase())\n        ) {\n          this.internalSearch = null\n        }\n      }\n    },\n    setSelectedItems () {\n      if (this.internalValue == null ||\n        this.internalValue === ''\n      ) {\n        this.selectedItems = []\n      } else {\n        this.selectedItems = this.multiple ? this.internalValue : [this.internalValue]\n      }\n    },\n    setValue (value?: any) {\n      VSelect.options.methods.setValue.call(this, value === undefined ? this.internalSearch : value)\n    },\n    updateEditing () {\n      const value = this.internalValue.slice()\n      const index = this.selectedItems.findIndex(item =>\n        this.getText(item) === this.internalSearch)\n\n      // If user enters a duplicate text on chip edit,\n      // don't add it, move it to the end of the list\n      if (index > -1) {\n        const item = typeof value[index] === 'object'\n          ? Object.assign({}, value[index])\n          : value[index]\n\n        value.splice(index, 1)\n        value.push(item)\n      } else {\n        value[this.editingIndex] = this.internalSearch\n      }\n\n      this.setValue(value)\n      this.editingIndex = -1\n      this.internalSearch = null\n    },\n    updateCombobox () {\n      // If search is not dirty, do nothing\n      if (!this.searchIsDirty) return\n\n      // The internal search is not matching\n      // the internal value, update the input\n      if (this.internalSearch !== this.getText(this.internalValue)) this.setValue()\n\n      // Reset search if using slot to avoid a double input\n      const isUsingSlot = Boolean(this.$scopedSlots.selection) || this.hasChips\n      if (isUsingSlot) this.internalSearch = null\n    },\n    updateSelf () {\n      this.multiple ? this.updateTags() : this.updateCombobox()\n    },\n    updateTags () {\n      const menuIndex = this.getMenuIndex()\n\n      // If the user is not searching\n      // and no menu item is selected\n      // or if the search is empty\n      // do nothing\n      if ((menuIndex < 0 && !this.searchIsDirty) ||\n          !this.internalSearch) return\n\n      if (this.editingIndex > -1) {\n        return this.updateEditing()\n      }\n\n      const index = this.selectedItems.findIndex(item =>\n        this.internalSearch === this.getText(item))\n\n      // If the duplicate item is an object,\n      // copy it, so that it can be added again later\n      const itemToSelect = index > -1 && typeof this.selectedItems[index] === 'object'\n        ? Object.assign({}, this.selectedItems[index])\n        : this.internalSearch\n\n      // If it already exists, do nothing\n      // this might need to change to bring\n      // the duplicated item to the last entered\n      if (index > -1) {\n        const internalValue = this.internalValue.slice()\n        internalValue.splice(index, 1)\n\n        this.setValue(internalValue)\n      }\n\n      // If menu index is greater than 1\n      // the selection is handled elsewhere\n      // TODO: find out where\n      if (menuIndex > -1) return (this.internalSearch = null)\n\n      this.selectItem(itemToSelect)\n\n      this.internalSearch = null\n    },\n    onPaste (event: ClipboardEvent) {\n      this.$emit('paste', event)\n      if (!this.multiple || this.searchIsDirty) return\n\n      const pastedItemText = event.clipboardData?.getData('text/vnd.vuetify.autocomplete.item+plain')\n      if (pastedItemText && this.findExistingIndex(pastedItemText as any) === -1) {\n        event.preventDefault()\n        VSelect.options.methods.selectItem.call(this, pastedItemText as any)\n      }\n    },\n    clearableCallback () {\n      this.editingIndex = -1\n\n      VAutocomplete.options.methods.clearableCallback.call(this)\n    },\n  },\n})\n","import './_grid.sass'\nimport { createSimpleFunctional } from '../../util/helpers'\n\nexport default createSimpleFunctional('spacer', 'div', 'v-spacer')\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('base-card',[_c('v-card-title',[_vm._v(\"Multiple combobox\")]),_c('v-card-text',[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('v-combobox',{attrs:{\"items\":_vm.itemsOne,\"label\":\"Select a favorite activity or create a new one\",\"multiple\":\"\"},model:{value:(_vm.select),callback:function ($$v) {_vm.select=$$v},expression:\"select\"}})],1),_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('v-combobox',{attrs:{\"items\":_vm.itemsOne,\"label\":\"I use chips\",\"multiple\":\"\",\"chips\":\"\"},model:{value:(_vm.select),callback:function ($$v) {_vm.select=$$v},expression:\"select\"}})],1),_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('v-combobox',{attrs:{\"items\":_vm.itemsOne,\"label\":\"I use a scoped slot\",\"multiple\":\"\",\"chips\":\"\"},scopedSlots:_vm._u([{key:\"selection\",fn:function(data){return [_c('v-chip',_vm._b({key:JSON.stringify(data.item),attrs:{\"input-value\":data.selected,\"disabled\":data.disabled},on:{\"click:close\":function($event){return data.parent.selectItem(data.item)}}},'v-chip',data.attrs,false),[_c('v-avatar',{staticClass:\"accent white--text\",attrs:{\"left\":\"\"},domProps:{\"textContent\":_vm._s(\n                                            data.item.slice(0, 1).totext -\n                                                _vm.uppercase()\n                                        )}}),_vm._v(\" \"+_vm._s(data.item)+\" \")],1)]}}]),model:{value:(_vm.select),callback:function ($$v) {_vm.select=$$v},expression:\"select\"}})],1),_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('v-combobox',{attrs:{\"label\":\"I'm readonly\",\"chips\":\"\",\"multiple\":\"\",\"readonly\":\"\"},model:{value:(_vm.select),callback:function ($$v) {_vm.select=$$v},expression:\"select\"}})],1)],1)],1)],1)],1),_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('base-card',[_c('v-card-title',[_vm._v(\"Dense\")]),_c('v-card-text',[_c('v-combobox',{attrs:{\"items\":_vm.itemsOne,\"label\":\"Combobox\",\"multiple\":\"\",\"outlined\":\"\",\"dense\":\"\"},model:{value:(_vm.select),callback:function ($$v) {_vm.select=$$v},expression:\"select\"}})],1)],1)],1),_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('base-card',[_c('v-card-title',[_vm._v(\"Advanced Custom Options\")]),_c('v-card-text',[_c('v-combobox',{attrs:{\"filter\":_vm.filter,\"hide-no-data\":!_vm.search,\"items\":_vm.items,\"search-input\":_vm.search,\"hide-selected\":\"\",\"label\":\"Search for an option\",\"multiple\":\"\",\"small-chips\":\"\",\"solo\":\"\"},on:{\"update:searchInput\":function($event){_vm.search=$event},\"update:search-input\":function($event){_vm.search=$event}},scopedSlots:_vm._u([{key:\"no-data\",fn:function(){return [_c('v-list-item',[_c('span',{staticClass:\"subheading\"},[_vm._v(\"Create\")]),_c('v-chip',{attrs:{\"color\":`${_vm.colors[_vm.nonce - 1]} lighten-3`,\"label\":\"\",\"small\":\"\"}},[_vm._v(\" \"+_vm._s(_vm.search)+\" \")])],1)]},proxy:true},{key:\"selection\",fn:function({attrs, item, parent, selected}){return [(item === Object(item))?_c('v-chip',_vm._b({attrs:{\"color\":`${item.color} lighten-3`,\"input-value\":selected,\"label\":\"\",\"small\":\"\"}},'v-chip',attrs,false),[_c('span',{staticClass:\"pr-2\"},[_vm._v(\" \"+_vm._s(item.text)+\" \")]),_c('v-icon',{attrs:{\"small\":\"\"},on:{\"click\":function($event){return parent.selectItem(item)}}},[_vm._v(\" mdi-close \")])],1):_vm._e()]}},{key:\"item\",fn:function({index, item}){return [(_vm.editing === item)?_c('v-text-field',{attrs:{\"autofocus\":\"\",\"flat\":\"\",\"background-color\":\"transparent\",\"hide-details\":\"\",\"solo\":\"\"},on:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.edit(index, item)}},model:{value:(_vm.editing.text),callback:function ($$v) {_vm.$set(_vm.editing, \"text\", $$v)},expression:\"editing.text\"}}):_c('v-chip',{attrs:{\"color\":`${item.color} lighten-3`,\"dark\":\"\",\"label\":\"\",\"small\":\"\"}},[_vm._v(\" \"+_vm._s(item.text)+\" \")]),_c('v-spacer'),_c('v-list-item-action',{on:{\"click\":function($event){$event.stopPropagation();}}},[_c('v-btn',{attrs:{\"icon\":\"\"},on:{\"click\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.edit(index, item)}}},[_c('v-icon',[_vm._v(_vm._s(_vm.editing !== item ? 'mdi-pencil' : 'mdi-check'))])],1)],1)]}}]),model:{value:(_vm.model),callback:function ($$v) {_vm.model=$$v},expression:\"model\"}})],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <v-row>\r\n        <v-col cols=\"12\">\r\n            <base-card>\r\n                <v-card-title>Multiple combobox</v-card-title>\r\n                <v-card-text>\r\n                    <v-row>\r\n                        <v-col cols=\"12\">\r\n                            <v-combobox\r\n                                v-model=\"select\"\r\n                                :items=\"itemsOne\"\r\n                                label=\"Select a favorite activity or create a new one\"\r\n                                multiple\r\n                            />\r\n                        </v-col>\r\n                        <v-col cols=\"12\">\r\n                            <v-combobox\r\n                                v-model=\"select\"\r\n                                :items=\"itemsOne\"\r\n                                label=\"I use chips\"\r\n                                multiple\r\n                                chips\r\n                            />\r\n                        </v-col>\r\n                        <v-col cols=\"12\">\r\n                            <v-combobox\r\n                                v-model=\"select\"\r\n                                :items=\"itemsOne\"\r\n                                label=\"I use a scoped slot\"\r\n                                multiple\r\n                                chips\r\n                            >\r\n                                <template v-slot:selection=\"data\">\r\n                                    <v-chip\r\n                                        :key=\"JSON.stringify(data.item)\"\r\n                                        v-bind=\"data.attrs\"\r\n                                        :input-value=\"data.selected\"\r\n                                        :disabled=\"data.disabled\"\r\n                                        @click:close=\"\r\n                                            data.parent.selectItem(data.item)\r\n                                        \"\r\n                                    >\r\n                                        <v-avatar\r\n                                            class=\"accent white--text\"\r\n                                            left\r\n                                            v-text=\"\r\n                                                data.item.slice(0, 1).totext -\r\n                                                    uppercase()\r\n                                            \"\r\n                                        />\r\n                                        {{ data.item }}\r\n                                    </v-chip>\r\n                                </template>\r\n                            </v-combobox>\r\n                        </v-col>\r\n                        <v-col cols=\"12\">\r\n                            <v-combobox\r\n                                v-model=\"select\"\r\n                                label=\"I'm readonly\"\r\n                                chips\r\n                                multiple\r\n                                readonly\r\n                            />\r\n                        </v-col>\r\n                    </v-row>\r\n                </v-card-text>\r\n            </base-card>\r\n        </v-col>\r\n        <v-col cols=\"12\">\r\n            <base-card>\r\n                <v-card-title>Dense</v-card-title>\r\n                <v-card-text>\r\n                    <v-combobox\r\n                        v-model=\"select\"\r\n                        :items=\"itemsOne\"\r\n                        label=\"Combobox\"\r\n                        multiple\r\n                        outlined\r\n                        dense\r\n                    />\r\n                </v-card-text>\r\n            </base-card>\r\n        </v-col>\r\n        <v-col cols=\"12\">\r\n            <base-card>\r\n                <v-card-title>Advanced Custom Options</v-card-title>\r\n                <v-card-text>\r\n                    <v-combobox\r\n                        v-model=\"model\"\r\n                        :filter=\"filter\"\r\n                        :hide-no-data=\"!search\"\r\n                        :items=\"items\"\r\n                        :search-input.sync=\"search\"\r\n                        hide-selected\r\n                        label=\"Search for an option\"\r\n                        multiple\r\n                        small-chips\r\n                        solo\r\n                    >\r\n                        <template v-slot:no-data>\r\n                            <v-list-item>\r\n                                <span class=\"subheading\">Create</span>\r\n                                <v-chip\r\n                                    :color=\"`${colors[nonce - 1]} lighten-3`\"\r\n                                    label\r\n                                    small\r\n                                >\r\n                                    {{ search }}\r\n                                </v-chip>\r\n                            </v-list-item>\r\n                        </template>\r\n                        <template\r\n                            v-slot:selection=\"{attrs, item, parent, selected}\"\r\n                        >\r\n                            <v-chip\r\n                                v-if=\"item === Object(item)\"\r\n                                v-bind=\"attrs\"\r\n                                :color=\"`${item.color} lighten-3`\"\r\n                                :input-value=\"selected\"\r\n                                label\r\n                                small\r\n                            >\r\n                                <span class=\"pr-2\">\r\n                                    {{ item.text }}\r\n                                </span>\r\n                                <v-icon small @click=\"parent.selectItem(item)\">\r\n                                    mdi-close\r\n                                </v-icon>\r\n                            </v-chip>\r\n                        </template>\r\n                        <template v-slot:item=\"{index, item}\">\r\n                            <v-text-field\r\n                                v-if=\"editing === item\"\r\n                                v-model=\"editing.text\"\r\n                                autofocus\r\n                                flat\r\n                                background-color=\"transparent\"\r\n                                hide-details\r\n                                solo\r\n                                @keyup.enter=\"edit(index, item)\"\r\n                            />\r\n                            <v-chip\r\n                                v-else\r\n                                :color=\"`${item.color} lighten-3`\"\r\n                                dark\r\n                                label\r\n                                small\r\n                            >\r\n                                {{ item.text }}\r\n                            </v-chip>\r\n                            <v-spacer />\r\n                            <v-list-item-action @click.stop>\r\n                                <v-btn\r\n                                    icon\r\n                                    @click.stop.prevent=\"edit(index, item)\"\r\n                                >\r\n                                    <v-icon>{{\r\n                                        editing !== item\r\n                                            ? 'mdi-pencil'\r\n                                            : 'mdi-check'\r\n                                    }}</v-icon>\r\n                                </v-btn>\r\n                            </v-list-item-action>\r\n                        </template>\r\n                    </v-combobox>\r\n                </v-card-text>\r\n            </base-card>\r\n        </v-col>\r\n    </v-row>\r\n</template>\r\n<script>\r\nexport default {\r\n    metaInfo: {\r\n        // title will be injected into parent titleTemplate\r\n        title: 'ComboBox'\r\n    },\r\n    data() {\r\n        return {\r\n            select: ['Vuetify', 'Programming'],\r\n            itemsOne: ['Programming', 'Design', 'Vue', 'Vuetify'],\r\n            // advanced custom options\r\n            activator: null,\r\n            attach: null,\r\n            colors: ['green', 'purple', 'indigo', 'cyan', 'teal', 'orange'],\r\n            editing: null,\r\n            index: -1,\r\n            items: [\r\n                {header: 'Select an option or create one'},\r\n                {\r\n                    text: 'Foo',\r\n                    color: 'blue'\r\n                },\r\n                {\r\n                    text: 'Bar',\r\n                    color: 'red'\r\n                }\r\n            ],\r\n            nonce: 1,\r\n            menu: false,\r\n            model: [\r\n                {\r\n                    text: 'Foo',\r\n                    color: 'blue'\r\n                }\r\n            ],\r\n            x: 0,\r\n            search: null,\r\n            y: 0\r\n        }\r\n    },\r\n    watch: {\r\n        model(val, prev) {\r\n            if (val.length === prev.length) return\r\n\r\n            this.model = val.map((v) => {\r\n                if (typeof v === 'string') {\r\n                    v = {\r\n                        text: v,\r\n                        color: this.colors[this.nonce - 1]\r\n                    }\r\n\r\n                    this.items.push(v)\r\n\r\n                    this.nonce++\r\n                }\r\n\r\n                return v\r\n            })\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        edit(index, item) {\r\n            if (!this.editing) {\r\n                this.editing = item\r\n                this.index = index\r\n            } else {\r\n                this.editing = null\r\n                this.index = -1\r\n            }\r\n        },\r\n        filter(item, queryText, itemText) {\r\n            if (item.header) return false\r\n\r\n            const hasValue = (val) => (val != null ? val : '')\r\n\r\n            const text = hasValue(itemText)\r\n            const query = hasValue(queryText)\r\n\r\n            return (\r\n                text\r\n                    .toString()\r\n                    .toLowerCase()\r\n                    .indexOf(query.toString().toLowerCase()) > -1\r\n            )\r\n        }\r\n    }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ComboBox.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ComboBox.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ComboBox.vue?vue&type=template&id=32a1ae32&\"\nimport script from \"./ComboBox.vue?vue&type=script&lang=js&\"\nexport * from \"./ComboBox.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport {\n  getObjectValueByPath,\n  getPropertyFromItem,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { PropType, VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    } as PropValidator<(item: any, queryText: string, itemText: string) => boolean>,\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | null>,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText)\n        const text = value != null ? String(value) : ''\n\n        return this.filter(item, String(this.internalSearch), text)\n      })\n    },\n    internalSearch: {\n      get (): string | null {\n        return this.lazySearch\n      },\n      set (val: any) { // TODO: this should be `string | null` but it breaks lots of other types\n        // emit update event only when the new\n        // search value is different from previous\n        if (this.lazySearch !== val) {\n          this.lazySearch = val\n          this.$emit('update:search-input', val)\n        }\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.blur()\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = null\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  destroyed () {\n    document.removeEventListener('copy', this.onCopy)\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      if (!this.autoSelectFirst) {\n        const preSelectedItem = oldVal[this.$refs.menu.listIndex]\n\n        if (preSelectedItem) {\n          this.setMenuIndex(val.findIndex(i => i === preSelectedItem))\n        } else {\n          this.setMenuIndex(-1)\n        }\n        this.$emit('update:list-index', this.$refs.menu.listIndex)\n      }\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n\n        if (this.autoSelectFirst && val.length) {\n          this.setMenuIndex(0)\n          this.$emit('update:list-index', this.$refs.menu.listIndex)\n        }\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      const curIndex = this.selectedIndex\n      const curItem = this.selectedItems[curIndex]\n\n      // Do nothing if input or item is disabled\n      if (\n        !this.isInteractive ||\n        this.getDisabled(curItem)\n      ) return\n\n      const lastIndex = this.selectedItems.length - 1\n\n      // Select the last item if\n      // there is no selection\n      if (\n        this.selectedIndex === -1 &&\n        lastIndex !== 0\n      ) {\n        this.selectedIndex = lastIndex\n\n        return\n      }\n\n      const length = this.selectedItems.length\n      const nextIndex = curIndex !== length - 1\n        ? curIndex\n        : curIndex - 1\n      const nextItem = this.selectedItems[nextIndex]\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : null)\n      } else {\n        this.selectItem(curItem)\n      }\n\n      this.selectedIndex = nextIndex\n    },\n    clearableCallback () {\n      this.internalSearch = null\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = mergeData(input.data!, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        domProps: { value: this.internalSearch },\n      })\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections (): VNode | never[] {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      if (!this.isAppendInner(e.target)) this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      if (!this.multiple && value === '') this.deleteCurrentItem()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown (e: Event) {\n      // Prevent screen from scrolling\n      e.preventDefault()\n\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (\n        !this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (\n        !this.multiple &&\n        !this.valueComparator(\n          this.internalSearch,\n          this.getValue(this.internalValue)\n        )\n      ) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any): boolean {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData?.setData('text/plain', currentItemText)\n      event.clipboardData?.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n"],"sourceRoot":""}